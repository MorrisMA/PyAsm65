(   1)                  ; ;    1: PROGRAM newton (input, output);
(   2)                  ; 	.stk 1024
(   3)                  ; 	.cod 512
(   4)                  ; STATIC_LINK .equ +5
(   5)                  ; RETURN_VALUE .equ -3
(   6)                  ; HIGH_RETURN_VALUE .equ -1
(   7)                  ; _start
(   8) 0200 ABBA        ; 	tsx.w
(   9) 0202 CBA2A209    ; 	lds.w #_stk_top
(  10) 0206 9C9505      ; 	stz _bss_start
(  11) 0209 ABA29505    ; 	ldx.w #_bss_start
(  12) 020D ABA09605    ; 	ldy.w #_bss_start+1
(  13) 0211 ABA9A209    ; 	lda.w #_stk_top
(  14) 0215 38          ; 	sec
(  15) 0216 ABE99505    ; 	sbc.w #_bss_start
(  16) 021A 540F        ; 	mov #15
(  17) 021C 4C1F02      ; 	jmp _pc65_main
(  18)                  ; ;    2: 
(  19)                  ; ;    3: CONST
(  20)                  ; ;    4:     epsilon = 1e-6;
(  21)                  ; ;    5: 
(  22)                  ; ;    6: VAR
(  23)                  ; ;    7:     number, root, sqroot : real;
(  24)                  ; ;    8: 
(  25)                  ; ;    9: BEGIN
(  26)                  ; _pc65_main .sub
(  27) 021F ABDA        ; 	phx.w
(  28) 0221 ABBA        ; 	tsx.w
(  29)                  ; ;   10:     REPEAT
(  30)                  ; L_005
(  31)                  ; ;   11:     writeln;
(  32) 0223 20FFFF      ; 	jsr _writeln
(  33)                  ; ;   12:     write('Enter new number (0 to quit): ');
(  34) 0226 ABE26F05    ; 	psh.w #S_007
(  35) 022A ABE20000    ; 	psh.w #0
(  36) 022E ABE21E00    ; 	psh.w #30
(  37) 0232 20FFFF      ; 	jsr _swrite
(  38) 0235 C206        ; 	adj #6
(  39)                  ; ;   13:     read(number);
(  40) 0237 ABE29605    ; 	psh.w #number_002
(  41) 023B 20FFFF      ; 	jsr _fread
(  42) 023E 8B6B        ; 	pli.s
(  43) 0240 AB8300      ; 	sta.w 0,I++
(  44) 0243 1B          ; 	swp a
(  45) 0244 AB8300      ; 	sta.w 0,I++
(  46)                  ; ;   14: 
(  47)                  ; ;   15:     IF number = 0 THEN BEGIN
(  48) 0247 ABAD9805    ; 	lda.w number_002+2
(  49) 024B 1B          ; 	swp a
(  50) 024C ABAD9605    ; 	lda.w number_002
(  51) 0250 1B          ; 	swp a
(  52) 0251 AB48        ; 	pha.w
(  53) 0253 1B          ; 	swp a
(  54) 0254 AB48        ; 	pha.w
(  55) 0256 ABE20000    ; 	psh.w #0
(  56)                  ; 	pha.w
(  57) 025A 20FFFF      ; 	jsr _fconv
(  58) 025D C202        ; 	adj #2
(  59) 025F 1B          ; 	swp a
(  60) 0260 AB48        ; 	pha.w
(  61) 0262 1B          ; 	swp a
(  62) 0263 AB48        ; 	pha.w
(  63) 0265 20FFFF      ; 	jsr _fcmp
(  64) 0268 C208        ; 	adj #8
(  65) 026A ABC90000    ; 	cmp.w #0
(  66) 026E 08          ; 	php
(  67) 026F A901        ; 	lda #1
(  68) 0271 28          ; 	plp
(  69) 0272 F002        ; 	beq L_010
(  70) 0274 A900        ; 	lda #0
(  71)                  ; L_010
(  72) 0276 ABC90100    ; 	cmp.w #1
(  73) 027A F003        ; 	beq L_008
(  74) 027C 4CBD02      ; 	jmp L_009
(  75)                  ; L_008
(  76)                  ; ;   16:         writeln(number:12:6, 0.0:12:6);
(  77) 027F ABAD9805    ; 	lda.w number_002+2
(  78) 0283 1B          ; 	swp a
(  79) 0284 ABAD9605    ; 	lda.w number_002
(  80) 0288 1B          ; 	swp a
(  81) 0289 AB48        ; 	pha.w
(  82) 028B 1B          ; 	swp a
(  83) 028C AB48        ; 	pha.w
(  84) 028E ABE20C00    ; 	psh.w #12
(  85)                  ; 	pha.w
(  86) 0292 ABE20600    ; 	psh.w #6
(  87)                  ; 	pha.w
(  88) 0296 20FFFF      ; 	jsr _fwrite
(  89) 0299 C208        ; 	adj #8
(  90) 029B ABAD9305    ; 	lda.w F_011+2
(  91) 029F 1B          ; 	swp a
(  92) 02A0 ABAD9105    ; 	lda.w F_011
(  93) 02A4 1B          ; 	swp a
(  94) 02A5 AB48        ; 	pha.w
(  95) 02A7 1B          ; 	swp a
(  96) 02A8 AB48        ; 	pha.w
(  97) 02AA ABE20C00    ; 	psh.w #12
(  98)                  ; 	pha.w
(  99) 02AE ABE20600    ; 	psh.w #6
( 100)                  ; 	pha.w
( 101) 02B2 20FFFF      ; 	jsr _fwrite
( 102) 02B5 C208        ; 	adj #8
( 103) 02B7 20FFFF      ; 	jsr _writeln
( 104)                  ; ;   17:     END
( 105)                  ; ;   18:     ELSE IF number < 0 THEN BEGIN
( 106) 02BA 4C1E05      ; 	jmp L_012
( 107)                  ; L_009
( 108) 02BD ABAD9805    ; 	lda.w number_002+2
( 109) 02C1 1B          ; 	swp a
( 110) 02C2 ABAD9605    ; 	lda.w number_002
( 111) 02C6 1B          ; 	swp a
( 112) 02C7 AB48        ; 	pha.w
( 113) 02C9 1B          ; 	swp a
( 114) 02CA AB48        ; 	pha.w
( 115) 02CC ABE20000    ; 	psh.w #0
( 116)                  ; 	pha.w
( 117) 02D0 20FFFF      ; 	jsr _fconv
( 118) 02D3 C202        ; 	adj #2
( 119) 02D5 1B          ; 	swp a
( 120) 02D6 AB48        ; 	pha.w
( 121) 02D8 1B          ; 	swp a
( 122) 02D9 AB48        ; 	pha.w
( 123) 02DB 20FFFF      ; 	jsr _fcmp
( 124) 02DE C208        ; 	adj #8
( 125) 02E0 ABC90000    ; 	cmp.w #0
( 126) 02E4 08          ; 	php
( 127) 02E5 A901        ; 	lda #1
( 128) 02E7 28          ; 	plp
( 129) 02E8 AB7002      ; 	blt L_015
( 130) 02EB A900        ; 	lda #0
( 131)                  ; L_015
( 132) 02ED ABC90100    ; 	cmp.w #1
( 133) 02F1 F003        ; 	beq L_013
( 134) 02F3 4C0D03      ; 	jmp L_014
( 135)                  ; L_013
( 136)                  ; ;   19:         writeln('*** ERROR:  number < 0');
( 137) 02F6 ABE25905    ; 	psh.w #S_016
( 138) 02FA ABE20000    ; 	psh.w #0
( 139) 02FE ABE21600    ; 	psh.w #22
( 140) 0302 20FFFF      ; 	jsr _swrite
( 141) 0305 C206        ; 	adj #6
( 142) 0307 20FFFF      ; 	jsr _writeln
( 143)                  ; ;   20:     END
( 144)                  ; ;   21:     ELSE BEGIN
( 145) 030A 4C1E05      ; 	jmp L_017
( 146)                  ; L_014
( 147)                  ; ;   22:         sqroot := sqrt(number);
( 148) 030D ABAD9805    ; 	lda.w number_002+2
( 149) 0311 1B          ; 	swp a
( 150) 0312 ABAD9605    ; 	lda.w number_002
( 151) 0316 1B          ; 	swp a
( 152) 0317 AB48        ; 	pha.w
( 153) 0319 1B          ; 	swp a
( 154) 031A AB48        ; 	pha.w
( 155) 031C 20FFFF      ; 	jsr _fsqrt
( 156) 031F C204        ; 	adj #4
( 157) 0321 AB8D9E05    ; 	sta.w sqroot_004
( 158) 0325 1B          ; 	swp a
( 159) 0326 AB8DA005    ; 	sta.w sqroot_004+2
( 160)                  ; ;   23:         writeln(number:12:6, sqroot:12:6);
( 161) 032A ABAD9805    ; 	lda.w number_002+2
( 162) 032E 1B          ; 	swp a
( 163) 032F ABAD9605    ; 	lda.w number_002
( 164) 0333 1B          ; 	swp a
( 165) 0334 AB48        ; 	pha.w
( 166) 0336 1B          ; 	swp a
( 167) 0337 AB48        ; 	pha.w
( 168) 0339 ABE20C00    ; 	psh.w #12
( 169)                  ; 	pha.w
( 170) 033D ABE20600    ; 	psh.w #6
( 171)                  ; 	pha.w
( 172) 0341 20FFFF      ; 	jsr _fwrite
( 173) 0344 C208        ; 	adj #8
( 174) 0346 ABADA005    ; 	lda.w sqroot_004+2
( 175) 034A 1B          ; 	swp a
( 176) 034B ABAD9E05    ; 	lda.w sqroot_004
( 177) 034F 1B          ; 	swp a
( 178) 0350 AB48        ; 	pha.w
( 179) 0352 1B          ; 	swp a
( 180) 0353 AB48        ; 	pha.w
( 181) 0355 ABE20C00    ; 	psh.w #12
( 182)                  ; 	pha.w
( 183) 0359 ABE20600    ; 	psh.w #6
( 184)                  ; 	pha.w
( 185) 035D 20FFFF      ; 	jsr _fwrite
( 186) 0360 C208        ; 	adj #8
( 187) 0362 20FFFF      ; 	jsr _writeln
( 188)                  ; ;   24:         writeln;
( 189) 0365 20FFFF      ; 	jsr _writeln
( 190)                  ; ;   25: 
( 191)                  ; ;   26:         root := 1;
( 192) 0368 ABE20100    ; 	psh.w #1
( 193)                  ; 	pha.w
( 194) 036C 20FFFF      ; 	jsr _fconv
( 195) 036F C202        ; 	adj #2
( 196) 0371 AB8D9A05    ; 	sta.w root_003
( 197) 0375 1B          ; 	swp a
( 198) 0376 AB8D9C05    ; 	sta.w root_003+2
( 199)                  ; ;   27:         REPEAT
( 200)                  ; L_018
( 201)                  ; ;   28:         root := (number/root + root)/2;
( 202) 037A ABAD9805    ; 	lda.w number_002+2
( 203) 037E 1B          ; 	swp a
( 204) 037F ABAD9605    ; 	lda.w number_002
( 205) 0383 1B          ; 	swp a
( 206) 0384 AB48        ; 	pha.w
( 207) 0386 1B          ; 	swp a
( 208) 0387 AB48        ; 	pha.w
( 209) 0389 ABAD9C05    ; 	lda.w root_003+2
( 210) 038D 1B          ; 	swp a
( 211) 038E ABAD9A05    ; 	lda.w root_003
( 212) 0392 1B          ; 	swp a
( 213) 0393 AB48        ; 	pha.w
( 214) 0395 1B          ; 	swp a
( 215) 0396 AB48        ; 	pha.w
( 216) 0398 20FFFF      ; 	jsr _fdiv
( 217) 039B C208        ; 	adj #8
( 218) 039D 1B          ; 	swp a
( 219) 039E AB48        ; 	pha.w
( 220) 03A0 1B          ; 	swp a
( 221) 03A1 AB48        ; 	pha.w
( 222) 03A3 ABAD9C05    ; 	lda.w root_003+2
( 223) 03A7 1B          ; 	swp a
( 224) 03A8 ABAD9A05    ; 	lda.w root_003
( 225) 03AC 1B          ; 	swp a
( 226) 03AD AB48        ; 	pha.w
( 227) 03AF 1B          ; 	swp a
( 228) 03B0 AB48        ; 	pha.w
( 229) 03B2 20FFFF      ; 	jsr _fadd
( 230) 03B5 C208        ; 	adj #8
( 231) 03B7 1B          ; 	swp a
( 232) 03B8 AB48        ; 	pha.w
( 233) 03BA 1B          ; 	swp a
( 234) 03BB AB48        ; 	pha.w
( 235) 03BD ABE20200    ; 	psh.w #2
( 236)                  ; 	pha.w
( 237) 03C1 20FFFF      ; 	jsr _fconv
( 238) 03C4 C202        ; 	adj #2
( 239) 03C6 1B          ; 	swp a
( 240) 03C7 AB48        ; 	pha.w
( 241) 03C9 1B          ; 	swp a
( 242) 03CA AB48        ; 	pha.w
( 243) 03CC 20FFFF      ; 	jsr _fdiv
( 244) 03CF C208        ; 	adj #8
( 245) 03D1 AB8D9A05    ; 	sta.w root_003
( 246) 03D5 1B          ; 	swp a
( 247) 03D6 AB8D9C05    ; 	sta.w root_003+2
( 248)                  ; ;   29:         writeln(root:24:6,
( 249) 03DA ABAD9C05    ; 	lda.w root_003+2
( 250) 03DE 1B          ; 	swp a
( 251) 03DF ABAD9A05    ; 	lda.w root_003
( 252) 03E3 1B          ; 	swp a
( 253) 03E4 AB48        ; 	pha.w
( 254) 03E6 1B          ; 	swp a
( 255) 03E7 AB48        ; 	pha.w
( 256) 03E9 ABE21800    ; 	psh.w #24
( 257)                  ; 	pha.w
( 258) 03ED ABE20600    ; 	psh.w #6
( 259)                  ; 	pha.w
( 260) 03F1 20FFFF      ; 	jsr _fwrite
( 261) 03F4 C208        ; 	adj #8
( 262)                  ; ;   30:             100*abs(root - sqroot)/sqroot:12:2,
( 263) 03F6 ABE26400    ; 	psh.w #100
( 264)                  ; 	pha.w
( 265) 03FA ABAD9C05    ; 	lda.w root_003+2
( 266) 03FE 1B          ; 	swp a
( 267) 03FF ABAD9A05    ; 	lda.w root_003
( 268) 0403 1B          ; 	swp a
( 269) 0404 AB48        ; 	pha.w
( 270) 0406 1B          ; 	swp a
( 271) 0407 AB48        ; 	pha.w
( 272) 0409 ABADA005    ; 	lda.w sqroot_004+2
( 273) 040D 1B          ; 	swp a
( 274) 040E ABAD9E05    ; 	lda.w sqroot_004
( 275) 0412 1B          ; 	swp a
( 276) 0413 AB48        ; 	pha.w
( 277) 0415 1B          ; 	swp a
( 278) 0416 AB48        ; 	pha.w
( 279) 0418 20FFFF      ; 	jsr _fsub
( 280) 041B C208        ; 	adj #8
( 281) 041D 1B          ; 	swp a
( 282) 041E AB48        ; 	pha.w
( 283) 0420 1B          ; 	swp a
( 284) 0421 AB48        ; 	pha.w
( 285) 0423 20FFFF      ; 	jsr _fabs
( 286) 0426 C204        ; 	adj #4
( 287) 0428 1B          ; 	swp a
( 288) 0429 AB48        ; 	pha.w
( 289) 042B 1B          ; 	swp a
( 290) 042C AB48        ; 	pha.w
( 291) 042E AB68        ; 	pla.w
( 292) 0430 1B          ; 	swp a
( 293) 0431 AB68        ; 	pla.w
( 294) 0433 AB7A        ; 	ply.w
( 295) 0435 AB48        ; 	pha.w
( 296) 0437 1B          ; 	swp a
( 297) 0438 AB48        ; 	pha.w
( 298) 043A AB5A        ; 	phy.w
( 299) 043C 20FFFF      ; 	jsr _fconv
( 300) 043F C202        ; 	adj #2
( 301) 0441 AB7A        ; 	ply.w
( 302) 0443 FB1B        ; 	swp y
( 303) 0445 AB7A        ; 	ply.w
( 304) 0447 1B          ; 	swp a
( 305) 0448 AB48        ; 	pha.w
( 306) 044A 1B          ; 	swp a
( 307) 044B AB48        ; 	pha.w
( 308) 044D AB5A        ; 	phy.w
( 309) 044F FB1B        ; 	swp y
( 310) 0451 AB5A        ; 	phy.w
( 311) 0453 20FFFF      ; 	jsr _fmul
( 312) 0456 C208        ; 	adj #8
( 313) 0458 1B          ; 	swp a
( 314) 0459 AB48        ; 	pha.w
( 315) 045B 1B          ; 	swp a
( 316) 045C AB48        ; 	pha.w
( 317) 045E ABADA005    ; 	lda.w sqroot_004+2
( 318) 0462 1B          ; 	swp a
( 319) 0463 ABAD9E05    ; 	lda.w sqroot_004
( 320) 0467 1B          ; 	swp a
( 321) 0468 AB48        ; 	pha.w
( 322) 046A 1B          ; 	swp a
( 323) 046B AB48        ; 	pha.w
( 324) 046D 20FFFF      ; 	jsr _fdiv
( 325) 0470 C208        ; 	adj #8
( 326) 0472 1B          ; 	swp a
( 327) 0473 AB48        ; 	pha.w
( 328) 0475 1B          ; 	swp a
( 329) 0476 AB48        ; 	pha.w
( 330) 0478 ABE20C00    ; 	psh.w #12
( 331)                  ; 	pha.w
( 332) 047C ABE20200    ; 	psh.w #2
( 333)                  ; 	pha.w
( 334) 0480 20FFFF      ; 	jsr _fwrite
( 335) 0483 C208        ; 	adj #8
( 336)                  ; ;   31:             '%')
( 337) 0485 ABE22500    ; 	psh.w #37
( 338)                  ; 	pha.w
( 339) 0489 ABE20000    ; 	psh.w #0
( 340) 048D 20FFFF      ; 	jsr _cwrite
( 341) 0490 C204        ; 	adj #4
( 342)                  ; ;   32:         UNTIL abs(number/sqr(root) - 1) < epsilon;
( 343) 0492 20FFFF      ; 	jsr _writeln
( 344) 0495 ABAD9805    ; 	lda.w number_002+2
( 345) 0499 1B          ; 	swp a
( 346) 049A ABAD9605    ; 	lda.w number_002
( 347) 049E 1B          ; 	swp a
( 348) 049F AB48        ; 	pha.w
( 349) 04A1 1B          ; 	swp a
( 350) 04A2 AB48        ; 	pha.w
( 351) 04A4 ABAD9C05    ; 	lda.w root_003+2
( 352) 04A8 1B          ; 	swp a
( 353) 04A9 ABAD9A05    ; 	lda.w root_003
( 354) 04AD 1B          ; 	swp a
( 355) 04AE AB48        ; 	pha.w
( 356) 04B0 1B          ; 	swp a
( 357) 04B1 AB48        ; 	pha.w
( 358) 04B3 1B          ; 	swp a
( 359) 04B4 AB48        ; 	pha.w
( 360) 04B6 1B          ; 	swp a
( 361) 04B7 AB48        ; 	pha.w
( 362) 04B9 20FFFF      ; 	jsr _fmul
( 363) 04BC C208        ; 	adj #8
( 364) 04BE 1B          ; 	swp a
( 365) 04BF AB48        ; 	pha.w
( 366) 04C1 1B          ; 	swp a
( 367) 04C2 AB48        ; 	pha.w
( 368) 04C4 20FFFF      ; 	jsr _fdiv
( 369) 04C7 C208        ; 	adj #8
( 370) 04C9 1B          ; 	swp a
( 371) 04CA AB48        ; 	pha.w
( 372) 04CC 1B          ; 	swp a
( 373) 04CD AB48        ; 	pha.w
( 374) 04CF ABE20100    ; 	psh.w #1
( 375)                  ; 	pha.w
( 376) 04D3 20FFFF      ; 	jsr _fconv
( 377) 04D6 C202        ; 	adj #2
( 378) 04D8 1B          ; 	swp a
( 379) 04D9 AB48        ; 	pha.w
( 380) 04DB 1B          ; 	swp a
( 381) 04DC AB48        ; 	pha.w
( 382) 04DE 20FFFF      ; 	jsr _fsub
( 383) 04E1 C208        ; 	adj #8
( 384) 04E3 1B          ; 	swp a
( 385) 04E4 AB48        ; 	pha.w
( 386) 04E6 1B          ; 	swp a
( 387) 04E7 AB48        ; 	pha.w
( 388) 04E9 20FFFF      ; 	jsr _fabs
( 389) 04EC C204        ; 	adj #4
( 390) 04EE 1B          ; 	swp a
( 391) 04EF AB48        ; 	pha.w
( 392) 04F1 1B          ; 	swp a
( 393) 04F2 AB48        ; 	pha.w
( 394) 04F4 ABAD8F05    ; 	lda.w F_020+2
( 395) 04F8 1B          ; 	swp a
( 396) 04F9 ABAD8D05    ; 	lda.w F_020
( 397) 04FD 1B          ; 	swp a
( 398) 04FE AB48        ; 	pha.w
( 399) 0500 1B          ; 	swp a
( 400) 0501 AB48        ; 	pha.w
( 401) 0503 20FFFF      ; 	jsr _fcmp
( 402) 0506 C208        ; 	adj #8
( 403) 0508 ABC90000    ; 	cmp.w #0
( 404) 050C 08          ; 	php
( 405) 050D A901        ; 	lda #1
( 406) 050F 28          ; 	plp
( 407) 0510 AB7002      ; 	blt L_021
( 408) 0513 A900        ; 	lda #0
( 409)                  ; L_021
( 410) 0515 ABC90100    ; 	cmp.w #1
( 411) 0519 F003        ; 	beq L_019
( 412) 051B 4C7A03      ; 	jmp L_018
( 413)                  ; L_019
( 414)                  ; ;   33:     END
( 415)                  ; ;   34:     UNTIL number = 0
( 416)                  ; L_017
( 417)                  ; L_012
( 418) 051E ABAD9805    ; 	lda.w number_002+2
( 419) 0522 1B          ; 	swp a
( 420) 0523 ABAD9605    ; 	lda.w number_002
( 421) 0527 1B          ; 	swp a
( 422) 0528 AB48        ; 	pha.w
( 423) 052A 1B          ; 	swp a
( 424) 052B AB48        ; 	pha.w
( 425) 052D ABE20000    ; 	psh.w #0
( 426)                  ; ;   35: END.
( 427)                  ; 	pha.w
( 428) 0531 20FFFF      ; 	jsr _fconv
( 429) 0534 C202        ; 	adj #2
( 430) 0536 1B          ; 	swp a
( 431) 0537 AB48        ; 	pha.w
( 432) 0539 1B          ; 	swp a
( 433) 053A AB48        ; 	pha.w
( 434) 053C 20FFFF      ; 	jsr _fcmp
( 435) 053F C208        ; 	adj #8
( 436) 0541 ABC90000    ; 	cmp.w #0
( 437) 0545 08          ; 	php
( 438) 0546 A901        ; 	lda #1
( 439) 0548 28          ; 	plp
( 440) 0549 F002        ; 	beq L_022
( 441) 054B A900        ; 	lda #0
( 442)                  ; L_022
( 443) 054D ABC90100    ; 	cmp.w #1
( 444) 0551 F003        ; 	beq L_006
( 445) 0553 4C2302      ; 	jmp L_005
( 446)                  ; L_006
( 447) 0556 ABFA        ; 	plx.w
( 448) 0558 60          ; 	rts
( 449)                  ; 	.end _pc65_main
( 450)                  ; 
( 451)                  ; 	.dat
( 452)                  ; 
( 453) 0559 2A2A2A20    ; S_016 .str "*** ERROR:  number < 0"
       055D 4552524F523A20206E756D626572203C2030
( 454) 056F 456E7465    ; S_007 .str "Enter new number (0 to quit): "
       0573 72206E6577206E756D62657220283020746F2071756974293A20
( 455) 058D 00000000    ; F_020 .flt 1.000000e-06
( 456) 0591 00000000    ; F_011 .flt 0.000000e+00
( 457) 0595 00          ; _bss_start .byt 1
( 458) 0596 00000000    ; number_002 .flt 1
( 459) 059A 00000000    ; root_003 .flt 1
( 460) 059E 00000000    ; sqroot_004 .flt 1
( 461) 05A2 00          ; _bss_end .byt 1
( 462) 05A3 00000000    ; _stk .byt 1023
       05A7 0000000000000000000000000000000000000000000000000000000000000000
       05C7 0000000000000000000000000000000000000000000000000000000000000000
       05E7 0000000000000000000000000000000000000000000000000000000000000000
       0607 0000000000000000000000000000000000000000000000000000000000000000
       0627 0000000000000000000000000000000000000000000000000000000000000000
       0647 0000000000000000000000000000000000000000000000000000000000000000
       0667 0000000000000000000000000000000000000000000000000000000000000000
       0687 0000000000000000000000000000000000000000000000000000000000000000
       06A7 0000000000000000000000000000000000000000000000000000000000000000
       06C7 0000000000000000000000000000000000000000000000000000000000000000
       06E7 0000000000000000000000000000000000000000000000000000000000000000
       0707 0000000000000000000000000000000000000000000000000000000000000000
       0727 0000000000000000000000000000000000000000000000000000000000000000
       0747 0000000000000000000000000000000000000000000000000000000000000000
       0767 0000000000000000000000000000000000000000000000000000000000000000
       0787 0000000000000000000000000000000000000000000000000000000000000000
       07A7 0000000000000000000000000000000000000000000000000000000000000000
       07C7 0000000000000000000000000000000000000000000000000000000000000000
       07E7 0000000000000000000000000000000000000000000000000000000000000000
       0807 0000000000000000000000000000000000000000000000000000000000000000
       0827 0000000000000000000000000000000000000000000000000000000000000000
       0847 0000000000000000000000000000000000000000000000000000000000000000
       0867 0000000000000000000000000000000000000000000000000000000000000000
       0887 0000000000000000000000000000000000000000000000000000000000000000
       08A7 0000000000000000000000000000000000000000000000000000000000000000
       08C7 0000000000000000000000000000000000000000000000000000000000000000
       08E7 0000000000000000000000000000000000000000000000000000000000000000
       0907 0000000000000000000000000000000000000000000000000000000000000000
       0927 0000000000000000000000000000000000000000000000000000000000000000
       0947 0000000000000000000000000000000000000000000000000000000000000000
       0967 0000000000000000000000000000000000000000000000000000000000000000
       0987 000000000000000000000000000000000000000000000000000000
( 463) 09A2 00          ; _stk_top .byt 1
( 464)                  ; 
( 465)                  ; 	.end
