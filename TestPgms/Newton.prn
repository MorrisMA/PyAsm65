(   1)                  ; ;    1: PROGRAM newton (input, output);
(   2)                  ; 	.stk 1024
(   3)                  ; 	.cod 512
(   4)                  ; STATIC_LINK .equ +5
(   5)                  ; RETURN_VALUE .equ -3
(   6)                  ; HIGH_RETURN_VALUE .equ -1
(   7)                  ; _start
(   8) 0200 ABBA        ; 	tsx.w
(   9) 0202 CBA2A109    ; 	lds.w #_stk_top
(  10) 0206 9C9405      ; 	stz _bss_start
(  11) 0209 ABA29405    ; 	ldx.w #_bss_start
(  12) 020D ABA09505    ; 	ldy.w #_bss_start+1
(  13) 0211 ABA9A109    ; 	lda.w #_stk_top
(  14) 0215 38          ; 	sec
(  15) 0216 ABE99405    ; 	sbc.w #_bss_start
(  16) 021A 540F        ; 	mov #15
(  17) 021C 4C1F02      ; 	jmp _pc65_main
(  18)                  ; ;    2: 
(  19)                  ; ;    3: CONST
(  20)                  ; ;    4:     epsilon = 1e-6;
(  21)                  ; ;    5: 
(  22)                  ; ;    6: VAR
(  23)                  ; ;    7:     number, root, sqroot : real;
(  24)                  ; ;    8: 
(  25)                  ; ;    9: BEGIN
(  26)                  ; _pc65_main .sub
(  27) 021F ABDA        ; 	phx.w
(  28) 0221 ABBA        ; 	tsx.w
(  29)                  ; ;   10:     REPEAT
(  30)                  ; L_005
(  31)                  ; ;   11:     writeln;
(  32) 0223 20FFFF      ; 	jsr _writeln
(  33)                  ; ;   12:     write('Enter new number (0 to quit): ');
(  34) 0226 ABE26E05    ; 	psh.w #S_007
(  35) 022A ABE20000    ; 	psh.w #0
(  36) 022E ABE21E00    ; 	psh.w #30
(  37) 0232 20FFFF      ; 	jsr _swrite
(  38) 0235 C206        ; 	adj #6
(  39)                  ; ;   13:     read(number);
(  40) 0237 ABE29505    ; 	psh.w #number_002
(  41) 023B 20FFFF      ; 	jsr _fread
(  42) 023E 6B          ; 	pli
(  43) 023F AB8300      ; 	sta.w 0,I++
(  44) 0242 1B          ; 	swp a
(  45) 0243 AB8300      ; 	sta.w 0,I++
(  46)                  ; ;   14: 
(  47)                  ; ;   15:     IF number = 0 THEN BEGIN
(  48) 0246 ABAD9705    ; 	lda.w number_002+2
(  49) 024A 1B          ; 	swp a
(  50) 024B ABAD9505    ; 	lda.w number_002
(  51) 024F 1B          ; 	swp a
(  52) 0250 AB48        ; 	pha.w
(  53) 0252 1B          ; 	swp a
(  54) 0253 AB48        ; 	pha.w
(  55) 0255 ABE20000    ; 	psh.w #0
(  56)                  ; 	pha.w
(  57) 0259 20FFFF      ; 	jsr _fconv
(  58) 025C C202        ; 	adj #2
(  59) 025E 1B          ; 	swp a
(  60) 025F AB48        ; 	pha.w
(  61) 0261 1B          ; 	swp a
(  62) 0262 AB48        ; 	pha.w
(  63) 0264 20FFFF      ; 	jsr _fcmp
(  64) 0267 C208        ; 	adj #8
(  65) 0269 ABC90000    ; 	cmp.w #0
(  66) 026D 08          ; 	php
(  67) 026E A901        ; 	lda #1
(  68) 0270 28          ; 	plp
(  69) 0271 F002        ; 	beq L_010
(  70) 0273 A900        ; 	lda #0
(  71)                  ; L_010
(  72) 0275 ABC90100    ; 	cmp.w #1
(  73) 0279 F003        ; 	beq L_008
(  74) 027B 4CBC02      ; 	jmp L_009
(  75)                  ; L_008
(  76)                  ; ;   16:         writeln(number:12:6, 0.0:12:6);
(  77) 027E ABAD9705    ; 	lda.w number_002+2
(  78) 0282 1B          ; 	swp a
(  79) 0283 ABAD9505    ; 	lda.w number_002
(  80) 0287 1B          ; 	swp a
(  81) 0288 AB48        ; 	pha.w
(  82) 028A 1B          ; 	swp a
(  83) 028B AB48        ; 	pha.w
(  84) 028D ABE20C00    ; 	psh.w #12
(  85)                  ; 	pha.w
(  86) 0291 ABE20600    ; 	psh.w #6
(  87)                  ; 	pha.w
(  88) 0295 20FFFF      ; 	jsr _fwrite
(  89) 0298 C208        ; 	adj #8
(  90) 029A ABAD9205    ; 	lda.w F_011+2
(  91) 029E 1B          ; 	swp a
(  92) 029F ABAD9005    ; 	lda.w F_011
(  93) 02A3 1B          ; 	swp a
(  94) 02A4 AB48        ; 	pha.w
(  95) 02A6 1B          ; 	swp a
(  96) 02A7 AB48        ; 	pha.w
(  97) 02A9 ABE20C00    ; 	psh.w #12
(  98)                  ; 	pha.w
(  99) 02AD ABE20600    ; 	psh.w #6
( 100)                  ; 	pha.w
( 101) 02B1 20FFFF      ; 	jsr _fwrite
( 102) 02B4 C208        ; 	adj #8
( 103) 02B6 20FFFF      ; 	jsr _writeln
( 104)                  ; ;   17:     END
( 105)                  ; ;   18:     ELSE IF number < 0 THEN BEGIN
( 106) 02B9 4C1D05      ; 	jmp L_012
( 107)                  ; L_009
( 108) 02BC ABAD9705    ; 	lda.w number_002+2
( 109) 02C0 1B          ; 	swp a
( 110) 02C1 ABAD9505    ; 	lda.w number_002
( 111) 02C5 1B          ; 	swp a
( 112) 02C6 AB48        ; 	pha.w
( 113) 02C8 1B          ; 	swp a
( 114) 02C9 AB48        ; 	pha.w
( 115) 02CB ABE20000    ; 	psh.w #0
( 116)                  ; 	pha.w
( 117) 02CF 20FFFF      ; 	jsr _fconv
( 118) 02D2 C202        ; 	adj #2
( 119) 02D4 1B          ; 	swp a
( 120) 02D5 AB48        ; 	pha.w
( 121) 02D7 1B          ; 	swp a
( 122) 02D8 AB48        ; 	pha.w
( 123) 02DA 20FFFF      ; 	jsr _fcmp
( 124) 02DD C208        ; 	adj #8
( 125) 02DF ABC90000    ; 	cmp.w #0
( 126) 02E3 08          ; 	php
( 127) 02E4 A901        ; 	lda #1
( 128) 02E6 28          ; 	plp
( 129) 02E7 AB7002      ; 	blt L_015
( 130) 02EA A900        ; 	lda #0
( 131)                  ; L_015
( 132) 02EC ABC90100    ; 	cmp.w #1
( 133) 02F0 F003        ; 	beq L_013
( 134) 02F2 4C0C03      ; 	jmp L_014
( 135)                  ; L_013
( 136)                  ; ;   19:         writeln('*** ERROR:  number < 0');
( 137) 02F5 ABE25805    ; 	psh.w #S_016
( 138) 02F9 ABE20000    ; 	psh.w #0
( 139) 02FD ABE21600    ; 	psh.w #22
( 140) 0301 20FFFF      ; 	jsr _swrite
( 141) 0304 C206        ; 	adj #6
( 142) 0306 20FFFF      ; 	jsr _writeln
( 143)                  ; ;   20:     END
( 144)                  ; ;   21:     ELSE BEGIN
( 145) 0309 4C1D05      ; 	jmp L_017
( 146)                  ; L_014
( 147)                  ; ;   22:         sqroot := sqrt(number);
( 148) 030C ABAD9705    ; 	lda.w number_002+2
( 149) 0310 1B          ; 	swp a
( 150) 0311 ABAD9505    ; 	lda.w number_002
( 151) 0315 1B          ; 	swp a
( 152) 0316 AB48        ; 	pha.w
( 153) 0318 1B          ; 	swp a
( 154) 0319 AB48        ; 	pha.w
( 155) 031B 20FFFF      ; 	jsr _fsqrt
( 156) 031E C204        ; 	adj #4
( 157) 0320 AB8D9D05    ; 	sta.w sqroot_004
( 158) 0324 1B          ; 	swp a
( 159) 0325 AB8D9F05    ; 	sta.w sqroot_004+2
( 160)                  ; ;   23:         writeln(number:12:6, sqroot:12:6);
( 161) 0329 ABAD9705    ; 	lda.w number_002+2
( 162) 032D 1B          ; 	swp a
( 163) 032E ABAD9505    ; 	lda.w number_002
( 164) 0332 1B          ; 	swp a
( 165) 0333 AB48        ; 	pha.w
( 166) 0335 1B          ; 	swp a
( 167) 0336 AB48        ; 	pha.w
( 168) 0338 ABE20C00    ; 	psh.w #12
( 169)                  ; 	pha.w
( 170) 033C ABE20600    ; 	psh.w #6
( 171)                  ; 	pha.w
( 172) 0340 20FFFF      ; 	jsr _fwrite
( 173) 0343 C208        ; 	adj #8
( 174) 0345 ABAD9F05    ; 	lda.w sqroot_004+2
( 175) 0349 1B          ; 	swp a
( 176) 034A ABAD9D05    ; 	lda.w sqroot_004
( 177) 034E 1B          ; 	swp a
( 178) 034F AB48        ; 	pha.w
( 179) 0351 1B          ; 	swp a
( 180) 0352 AB48        ; 	pha.w
( 181) 0354 ABE20C00    ; 	psh.w #12
( 182)                  ; 	pha.w
( 183) 0358 ABE20600    ; 	psh.w #6
( 184)                  ; 	pha.w
( 185) 035C 20FFFF      ; 	jsr _fwrite
( 186) 035F C208        ; 	adj #8
( 187) 0361 20FFFF      ; 	jsr _writeln
( 188)                  ; ;   24:         writeln;
( 189) 0364 20FFFF      ; 	jsr _writeln
( 190)                  ; ;   25: 
( 191)                  ; ;   26:         root := 1;
( 192) 0367 ABE20100    ; 	psh.w #1
( 193)                  ; 	pha.w
( 194) 036B 20FFFF      ; 	jsr _fconv
( 195) 036E C202        ; 	adj #2
( 196) 0370 AB8D9905    ; 	sta.w root_003
( 197) 0374 1B          ; 	swp a
( 198) 0375 AB8D9B05    ; 	sta.w root_003+2
( 199)                  ; ;   27:         REPEAT
( 200)                  ; L_018
( 201)                  ; ;   28:         root := (number/root + root)/2;
( 202) 0379 ABAD9705    ; 	lda.w number_002+2
( 203) 037D 1B          ; 	swp a
( 204) 037E ABAD9505    ; 	lda.w number_002
( 205) 0382 1B          ; 	swp a
( 206) 0383 AB48        ; 	pha.w
( 207) 0385 1B          ; 	swp a
( 208) 0386 AB48        ; 	pha.w
( 209) 0388 ABAD9B05    ; 	lda.w root_003+2
( 210) 038C 1B          ; 	swp a
( 211) 038D ABAD9905    ; 	lda.w root_003
( 212) 0391 1B          ; 	swp a
( 213) 0392 AB48        ; 	pha.w
( 214) 0394 1B          ; 	swp a
( 215) 0395 AB48        ; 	pha.w
( 216) 0397 20FFFF      ; 	jsr _fdiv
( 217) 039A C208        ; 	adj #8
( 218) 039C 1B          ; 	swp a
( 219) 039D AB48        ; 	pha.w
( 220) 039F 1B          ; 	swp a
( 221) 03A0 AB48        ; 	pha.w
( 222) 03A2 ABAD9B05    ; 	lda.w root_003+2
( 223) 03A6 1B          ; 	swp a
( 224) 03A7 ABAD9905    ; 	lda.w root_003
( 225) 03AB 1B          ; 	swp a
( 226) 03AC AB48        ; 	pha.w
( 227) 03AE 1B          ; 	swp a
( 228) 03AF AB48        ; 	pha.w
( 229) 03B1 20FFFF      ; 	jsr _fadd
( 230) 03B4 C208        ; 	adj #8
( 231) 03B6 1B          ; 	swp a
( 232) 03B7 AB48        ; 	pha.w
( 233) 03B9 1B          ; 	swp a
( 234) 03BA AB48        ; 	pha.w
( 235) 03BC ABE20200    ; 	psh.w #2
( 236)                  ; 	pha.w
( 237) 03C0 20FFFF      ; 	jsr _fconv
( 238) 03C3 C202        ; 	adj #2
( 239) 03C5 1B          ; 	swp a
( 240) 03C6 AB48        ; 	pha.w
( 241) 03C8 1B          ; 	swp a
( 242) 03C9 AB48        ; 	pha.w
( 243) 03CB 20FFFF      ; 	jsr _fdiv
( 244) 03CE C208        ; 	adj #8
( 245) 03D0 AB8D9905    ; 	sta.w root_003
( 246) 03D4 1B          ; 	swp a
( 247) 03D5 AB8D9B05    ; 	sta.w root_003+2
( 248)                  ; ;   29:         writeln(root:24:6,
( 249) 03D9 ABAD9B05    ; 	lda.w root_003+2
( 250) 03DD 1B          ; 	swp a
( 251) 03DE ABAD9905    ; 	lda.w root_003
( 252) 03E2 1B          ; 	swp a
( 253) 03E3 AB48        ; 	pha.w
( 254) 03E5 1B          ; 	swp a
( 255) 03E6 AB48        ; 	pha.w
( 256) 03E8 ABE21800    ; 	psh.w #24
( 257)                  ; 	pha.w
( 258) 03EC ABE20600    ; 	psh.w #6
( 259)                  ; 	pha.w
( 260) 03F0 20FFFF      ; 	jsr _fwrite
( 261) 03F3 C208        ; 	adj #8
( 262)                  ; ;   30:             100*abs(root - sqroot)/sqroot:12:2,
( 263) 03F5 ABE26400    ; 	psh.w #100
( 264)                  ; 	pha.w
( 265) 03F9 ABAD9B05    ; 	lda.w root_003+2
( 266) 03FD 1B          ; 	swp a
( 267) 03FE ABAD9905    ; 	lda.w root_003
( 268) 0402 1B          ; 	swp a
( 269) 0403 AB48        ; 	pha.w
( 270) 0405 1B          ; 	swp a
( 271) 0406 AB48        ; 	pha.w
( 272) 0408 ABAD9F05    ; 	lda.w sqroot_004+2
( 273) 040C 1B          ; 	swp a
( 274) 040D ABAD9D05    ; 	lda.w sqroot_004
( 275) 0411 1B          ; 	swp a
( 276) 0412 AB48        ; 	pha.w
( 277) 0414 1B          ; 	swp a
( 278) 0415 AB48        ; 	pha.w
( 279) 0417 20FFFF      ; 	jsr _fsub
( 280) 041A C208        ; 	adj #8
( 281) 041C 1B          ; 	swp a
( 282) 041D AB48        ; 	pha.w
( 283) 041F 1B          ; 	swp a
( 284) 0420 AB48        ; 	pha.w
( 285) 0422 20FFFF      ; 	jsr _fabs
( 286) 0425 C204        ; 	adj #4
( 287) 0427 1B          ; 	swp a
( 288) 0428 AB48        ; 	pha.w
( 289) 042A 1B          ; 	swp a
( 290) 042B AB48        ; 	pha.w
( 291) 042D AB68        ; 	pla.w
( 292) 042F 1B          ; 	swp a
( 293) 0430 AB68        ; 	pla.w
( 294) 0432 AB7A        ; 	ply.w
( 295) 0434 AB48        ; 	pha.w
( 296) 0436 1B          ; 	swp a
( 297) 0437 AB48        ; 	pha.w
( 298) 0439 AB5A        ; 	phy.w
( 299) 043B 20FFFF      ; 	jsr _fconv
( 300) 043E C202        ; 	adj #2
( 301) 0440 AB7A        ; 	ply.w
( 302) 0442 FB1B        ; 	swp y
( 303) 0444 AB7A        ; 	ply.w
( 304) 0446 1B          ; 	swp a
( 305) 0447 AB48        ; 	pha.w
( 306) 0449 1B          ; 	swp a
( 307) 044A AB48        ; 	pha.w
( 308) 044C AB5A        ; 	phy.w
( 309) 044E FB1B        ; 	swp y
( 310) 0450 AB5A        ; 	phy.w
( 311) 0452 20FFFF      ; 	jsr _fmul
( 312) 0455 C208        ; 	adj #8
( 313) 0457 1B          ; 	swp a
( 314) 0458 AB48        ; 	pha.w
( 315) 045A 1B          ; 	swp a
( 316) 045B AB48        ; 	pha.w
( 317) 045D ABAD9F05    ; 	lda.w sqroot_004+2
( 318) 0461 1B          ; 	swp a
( 319) 0462 ABAD9D05    ; 	lda.w sqroot_004
( 320) 0466 1B          ; 	swp a
( 321) 0467 AB48        ; 	pha.w
( 322) 0469 1B          ; 	swp a
( 323) 046A AB48        ; 	pha.w
( 324) 046C 20FFFF      ; 	jsr _fdiv
( 325) 046F C208        ; 	adj #8
( 326) 0471 1B          ; 	swp a
( 327) 0472 AB48        ; 	pha.w
( 328) 0474 1B          ; 	swp a
( 329) 0475 AB48        ; 	pha.w
( 330) 0477 ABE20C00    ; 	psh.w #12
( 331)                  ; 	pha.w
( 332) 047B ABE20200    ; 	psh.w #2
( 333)                  ; 	pha.w
( 334) 047F 20FFFF      ; 	jsr _fwrite
( 335) 0482 C208        ; 	adj #8
( 336)                  ; ;   31:             '%')
( 337) 0484 ABE22500    ; 	psh.w #37
( 338)                  ; 	pha.w
( 339) 0488 ABE20000    ; 	psh.w #0
( 340) 048C 20FFFF      ; 	jsr _cwrite
( 341) 048F C204        ; 	adj #4
( 342)                  ; ;   32:         UNTIL abs(number/sqr(root) - 1) < epsilon;
( 343) 0491 20FFFF      ; 	jsr _writeln
( 344) 0494 ABAD9705    ; 	lda.w number_002+2
( 345) 0498 1B          ; 	swp a
( 346) 0499 ABAD9505    ; 	lda.w number_002
( 347) 049D 1B          ; 	swp a
( 348) 049E AB48        ; 	pha.w
( 349) 04A0 1B          ; 	swp a
( 350) 04A1 AB48        ; 	pha.w
( 351) 04A3 ABAD9B05    ; 	lda.w root_003+2
( 352) 04A7 1B          ; 	swp a
( 353) 04A8 ABAD9905    ; 	lda.w root_003
( 354) 04AC 1B          ; 	swp a
( 355) 04AD AB48        ; 	pha.w
( 356) 04AF 1B          ; 	swp a
( 357) 04B0 AB48        ; 	pha.w
( 358) 04B2 1B          ; 	swp a
( 359) 04B3 AB48        ; 	pha.w
( 360) 04B5 1B          ; 	swp a
( 361) 04B6 AB48        ; 	pha.w
( 362) 04B8 20FFFF      ; 	jsr _fmul
( 363) 04BB C208        ; 	adj #8
( 364) 04BD 1B          ; 	swp a
( 365) 04BE AB48        ; 	pha.w
( 366) 04C0 1B          ; 	swp a
( 367) 04C1 AB48        ; 	pha.w
( 368) 04C3 20FFFF      ; 	jsr _fdiv
( 369) 04C6 C208        ; 	adj #8
( 370) 04C8 1B          ; 	swp a
( 371) 04C9 AB48        ; 	pha.w
( 372) 04CB 1B          ; 	swp a
( 373) 04CC AB48        ; 	pha.w
( 374) 04CE ABE20100    ; 	psh.w #1
( 375)                  ; 	pha.w
( 376) 04D2 20FFFF      ; 	jsr _fconv
( 377) 04D5 C202        ; 	adj #2
( 378) 04D7 1B          ; 	swp a
( 379) 04D8 AB48        ; 	pha.w
( 380) 04DA 1B          ; 	swp a
( 381) 04DB AB48        ; 	pha.w
( 382) 04DD 20FFFF      ; 	jsr _fsub
( 383) 04E0 C208        ; 	adj #8
( 384) 04E2 1B          ; 	swp a
( 385) 04E3 AB48        ; 	pha.w
( 386) 04E5 1B          ; 	swp a
( 387) 04E6 AB48        ; 	pha.w
( 388) 04E8 20FFFF      ; 	jsr _fabs
( 389) 04EB C204        ; 	adj #4
( 390) 04ED 1B          ; 	swp a
( 391) 04EE AB48        ; 	pha.w
( 392) 04F0 1B          ; 	swp a
( 393) 04F1 AB48        ; 	pha.w
( 394) 04F3 ABAD8E05    ; 	lda.w F_020+2
( 395) 04F7 1B          ; 	swp a
( 396) 04F8 ABAD8C05    ; 	lda.w F_020
( 397) 04FC 1B          ; 	swp a
( 398) 04FD AB48        ; 	pha.w
( 399) 04FF 1B          ; 	swp a
( 400) 0500 AB48        ; 	pha.w
( 401) 0502 20FFFF      ; 	jsr _fcmp
( 402) 0505 C208        ; 	adj #8
( 403) 0507 ABC90000    ; 	cmp.w #0
( 404) 050B 08          ; 	php
( 405) 050C A901        ; 	lda #1
( 406) 050E 28          ; 	plp
( 407) 050F AB7002      ; 	blt L_021
( 408) 0512 A900        ; 	lda #0
( 409)                  ; L_021
( 410) 0514 ABC90100    ; 	cmp.w #1
( 411) 0518 F003        ; 	beq L_019
( 412) 051A 4C7903      ; 	jmp L_018
( 413)                  ; L_019
( 414)                  ; ;   33:     END
( 415)                  ; ;   34:     UNTIL number = 0
( 416)                  ; L_017
( 417)                  ; L_012
( 418) 051D ABAD9705    ; 	lda.w number_002+2
( 419) 0521 1B          ; 	swp a
( 420) 0522 ABAD9505    ; 	lda.w number_002
( 421) 0526 1B          ; 	swp a
( 422) 0527 AB48        ; 	pha.w
( 423) 0529 1B          ; 	swp a
( 424) 052A AB48        ; 	pha.w
( 425) 052C ABE20000    ; 	psh.w #0
( 426)                  ; ;   35: END.
( 427)                  ; 	pha.w
( 428) 0530 20FFFF      ; 	jsr _fconv
( 429) 0533 C202        ; 	adj #2
( 430) 0535 1B          ; 	swp a
( 431) 0536 AB48        ; 	pha.w
( 432) 0538 1B          ; 	swp a
( 433) 0539 AB48        ; 	pha.w
( 434) 053B 20FFFF      ; 	jsr _fcmp
( 435) 053E C208        ; 	adj #8
( 436) 0540 ABC90000    ; 	cmp.w #0
( 437) 0544 08          ; 	php
( 438) 0545 A901        ; 	lda #1
( 439) 0547 28          ; 	plp
( 440) 0548 F002        ; 	beq L_022
( 441) 054A A900        ; 	lda #0
( 442)                  ; L_022
( 443) 054C ABC90100    ; 	cmp.w #1
( 444) 0550 F003        ; 	beq L_006
( 445) 0552 4C2302      ; 	jmp L_005
( 446)                  ; L_006
( 447) 0555 ABFA        ; 	plx.w
( 448) 0557 60          ; 	rts
( 449)                  ; 	.end _pc65_main
( 450)                  ; 
( 451)                  ; 	.dat
( 452)                  ; 
( 453) 0558 2A2A2A20    ; S_016 .str "*** ERROR:  number < 0"
       055C 4552524F523A20206E756D626572203C2030
( 454) 056E 456E7465    ; S_007 .str "Enter new number (0 to quit): "
       0572 72206E6577206E756D62657220283020746F2071756974293A20
( 455) 058C 00000000    ; F_020 .flt 1.000000e-06
( 456) 0590 00000000    ; F_011 .flt 0.000000e+00
( 457) 0594 00          ; _bss_start .byt 1
( 458) 0595 00000000    ; number_002 .flt 1
( 459) 0599 00000000    ; root_003 .flt 1
( 460) 059D 00000000    ; sqroot_004 .flt 1
( 461) 05A1 00          ; _bss_end .byt 1
( 462) 05A2 00000000    ; _stk .byt 1023
       05A6 0000000000000000000000000000000000000000000000000000000000000000
       05C6 0000000000000000000000000000000000000000000000000000000000000000
       05E6 0000000000000000000000000000000000000000000000000000000000000000
       0606 0000000000000000000000000000000000000000000000000000000000000000
       0626 0000000000000000000000000000000000000000000000000000000000000000
       0646 0000000000000000000000000000000000000000000000000000000000000000
       0666 0000000000000000000000000000000000000000000000000000000000000000
       0686 0000000000000000000000000000000000000000000000000000000000000000
       06A6 0000000000000000000000000000000000000000000000000000000000000000
       06C6 0000000000000000000000000000000000000000000000000000000000000000
       06E6 0000000000000000000000000000000000000000000000000000000000000000
       0706 0000000000000000000000000000000000000000000000000000000000000000
       0726 0000000000000000000000000000000000000000000000000000000000000000
       0746 0000000000000000000000000000000000000000000000000000000000000000
       0766 0000000000000000000000000000000000000000000000000000000000000000
       0786 0000000000000000000000000000000000000000000000000000000000000000
       07A6 0000000000000000000000000000000000000000000000000000000000000000
       07C6 0000000000000000000000000000000000000000000000000000000000000000
       07E6 0000000000000000000000000000000000000000000000000000000000000000
       0806 0000000000000000000000000000000000000000000000000000000000000000
       0826 0000000000000000000000000000000000000000000000000000000000000000
       0846 0000000000000000000000000000000000000000000000000000000000000000
       0866 0000000000000000000000000000000000000000000000000000000000000000
       0886 0000000000000000000000000000000000000000000000000000000000000000
       08A6 0000000000000000000000000000000000000000000000000000000000000000
       08C6 0000000000000000000000000000000000000000000000000000000000000000
       08E6 0000000000000000000000000000000000000000000000000000000000000000
       0906 0000000000000000000000000000000000000000000000000000000000000000
       0926 0000000000000000000000000000000000000000000000000000000000000000
       0946 0000000000000000000000000000000000000000000000000000000000000000
       0966 0000000000000000000000000000000000000000000000000000000000000000
       0986 000000000000000000000000000000000000000000000000000000
( 463) 09A1 00          ; _stk_top .byt 1
( 464)                  ; 
( 465)                  ; 	.end
