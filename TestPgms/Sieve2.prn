(   1)                  ; ;    1: PROGRAM eratosthenes(output);
(   2)                  ; 	.stk 1024
(   3)                  ; 	.cod 512
(   4)                  ; STATIC_LINK .equ +5
(   5)                  ; RETURN_VALUE .equ -3
(   6)                  ; HIGH_RETURN_VALUE .equ -1
(   7)                  ; _start
(   8) 0200 ABBA        ; 	tsx.w
(   9) 0202 CBA21911    ; 	lds.w #_stk_top
(  10) 0206 9C3E05      ; 	stz _bss_start
(  11) 0209 ABA23E05    ; 	ldx.w #_bss_start
(  12) 020D ABA03F05    ; 	ldy.w #_bss_start+1
(  13) 0211 ABA91911    ; 	lda.w #_stk_top
(  14) 0215 38          ; 	sec
(  15) 0216 ABE93E05    ; 	sbc.w #_bss_start
(  16) 021A 540A        ; 	mov #10
(  17) 021C 4C1F02      ; 	jmp _pc65_main
(  18)                  ; ;    2: 
(  19)                  ; ;    3: CONST
(  20)                  ; ;    4:     max = 1000;
(  21)                  ; ;    5: 
(  22)                  ; ;    6: VAR
(  23)                  ; ;    7:     sieve : ARRAY [1..max] OF BOOLEAN;
(  24)                  ; ;    8:     i, j, limit, prime, factor : INTEGER;
(  25)                  ; ;    9: 
(  26)                  ; ;   10: BEGIN
(  27)                  ; _pc65_main .sub
(  28) 021F ABDA        ; 	phx.w
(  29) 0221 ABBA        ; 	tsx.w
(  30)                  ; ;   11:     limit := max DIV 2;
(  31) 0223 ABE2E803    ; 	psh.w #1000
(  32)                  ; 	pha.w
(  33) 0227 ABE20200    ; 	psh.w #2
(  34)                  ; 	pha.w
(  35) 022B 202F04      ; 	jsr _idiv
(  36) 022E C204        ; 	adj #4
(  37) 0230 AB8D130D    ; 	sta.w limit_005
(  38)                  ; ;   12:     sieve[1] := FALSE;
(  39) 0234 ABE23F05    ; 	psh.w #sieve_002
(  40) 0238 A901        ; 	lda #1
(  41) 023A AB3A        ; 	dec.w a
(  42) 023C AB0A        ; 	asl.w a
(  43) 023E 18          ; 	clc
(  44) 023F CB7501      ; 	adc.w 1,S
(  45) 0242 CB9501      ; 	sta.w 1,S
(  46) 0245 A900        ; 	lda #0
(  47) 0247 8B6B        ; 	pli.s
(  48) 0249 AB8300      ; 	sta.w 0,I++
(  49)                  ; ;   13: 
(  50)                  ; ;   14:     FOR i := 2 TO max DO
(  51) 024C A902        ; 	lda #2
(  52) 024E AB8D0F0D    ; 	sta.w i_003
(  53)                  ; L_008
(  54) 0252 ABA9E803    ; 	lda.w #1000
(  55) 0256 ABCD0F0D    ; 	cmp.w i_003
(  56) 025A AB5003      ; 	bge L_009
(  57) 025D 4C8102      ; 	jmp L_010
(  58)                  ; L_009
(  59)                  ; ;   15:         sieve[i] := TRUE;
(  60) 0260 ABE23F05    ; 	psh.w #sieve_002
(  61) 0264 ABAD0F0D    ; 	lda.w i_003
(  62) 0268 AB3A        ; 	dec.w a
(  63) 026A AB0A        ; 	asl.w a
(  64) 026C 18          ; 	clc
(  65) 026D CB7501      ; 	adc.w 1,S
(  66) 0270 CB9501      ; 	sta.w 1,S
(  67) 0273 A901        ; 	lda #1
(  68) 0275 8B6B        ; 	pli.s
(  69) 0277 AB8300      ; 	sta.w 0,I++
(  70) 027A ABEE0F0D    ; 	inc.w i_003
(  71) 027E 4C5202      ; 	jmp L_008
(  72)                  ; L_010
(  73) 0281 ABCE0F0D    ; 	dec.w i_003
(  74)                  ; ;   16: 
(  75)                  ; ;   17:     prime := 1;
(  76) 0285 A901        ; 	lda #1
(  77) 0287 AB8D150D    ; 	sta.w prime_006
(  78)                  ; ;   18: 
(  79)                  ; ;   19:     REPEAT
(  80)                  ; L_011
(  81)                  ; ;   20:         prime := prime + 1;
(  82) 028B ABAD150D    ; 	lda.w prime_006
(  83) 028F AB48        ; 	pha.w
(  84) 0291 A901        ; 	lda #1
(  85) 0293 18          ; 	clc
(  86) 0294 CB7501      ; 	adc.w 1,S
(  87) 0297 C202        ; 	adj #2
(  88) 0299 AB8D150D    ; 	sta.w prime_006
(  89)                  ; ;   21:         WHILE NOT sieve[prime] DO
(  90)                  ; L_013
(  91) 029D ABE23F05    ; 	psh.w #sieve_002
(  92) 02A1 ABAD150D    ; 	lda.w prime_006
(  93) 02A5 AB3A        ; 	dec.w a
(  94) 02A7 AB0A        ; 	asl.w a
(  95) 02A9 18          ; 	clc
(  96) 02AA CB7501      ; 	adc.w 1,S
(  97) 02AD CB9501      ; 	sta.w 1,S
(  98) 02B0 8B6B        ; 	pli.s
(  99) 02B2 ABA300      ; 	lda.w 0,I++
( 100) 02B5 4901        ; 	eor #1
( 101) 02B7 ABC90100    ; 	cmp.w #1
( 102) 02BB F003        ; 	beq L_014
( 103) 02BD 4CD502      ; 	jmp L_015
( 104)                  ; L_014
( 105)                  ; ;   22:             prime := prime + 1;
( 106) 02C0 ABAD150D    ; 	lda.w prime_006
( 107) 02C4 AB48        ; 	pha.w
( 108) 02C6 A901        ; 	lda #1
( 109) 02C8 18          ; 	clc
( 110) 02C9 CB7501      ; 	adc.w 1,S
( 111) 02CC C202        ; 	adj #2
( 112) 02CE AB8D150D    ; 	sta.w prime_006
( 113) 02D2 4C9D02      ; 	jmp L_013
( 114)                  ; L_015
( 115)                  ; ;   23: 
( 116)                  ; ;   24:         factor := 2*prime;
( 117) 02D5 ABE20200    ; 	psh.w #2
( 118)                  ; 	pha.w
( 119) 02D9 ABAD150D    ; 	lda.w prime_006
( 120) 02DD AB48        ; 	pha.w
( 121) 02DF 205E04      ; 	jsr _imul
( 122) 02E2 C204        ; 	adj #4
( 123) 02E4 AB8D170D    ; 	sta.w factor_007
( 124)                  ; ;   25: 
( 125)                  ; ;   26:         WHILE factor <= max DO BEGIN
( 126)                  ; L_016
( 127) 02E8 ABAD170D    ; 	lda.w factor_007
( 128) 02EC AB48        ; 	pha.w
( 129) 02EE ABA9E803    ; 	lda.w #1000
( 130) 02F2 CB4401      ; 	xma.w 1,S
( 131) 02F5 CBD501      ; 	cmp.w 1,S
( 132) 02F8 C202        ; 	adj #2
( 133) 02FA 08          ; 	php
( 134) 02FB A901        ; 	lda #1
( 135) 02FD 28          ; 	plp
( 136) 02FE AB3002      ; 	ble L_019
( 137) 0301 A900        ; 	lda #0
( 138)                  ; L_019
( 139) 0303 ABC90100    ; 	cmp.w #1
( 140) 0307 F003        ; 	beq L_017
( 141) 0309 4C3D03      ; 	jmp L_018
( 142)                  ; L_017
( 143)                  ; ;   27:             sieve[factor] := FALSE;
( 144) 030C ABE23F05    ; 	psh.w #sieve_002
( 145) 0310 ABAD170D    ; 	lda.w factor_007
( 146) 0314 AB3A        ; 	dec.w a
( 147) 0316 AB0A        ; 	asl.w a
( 148) 0318 18          ; 	clc
( 149) 0319 CB7501      ; 	adc.w 1,S
( 150) 031C CB9501      ; 	sta.w 1,S
( 151) 031F A900        ; 	lda #0
( 152) 0321 8B6B        ; 	pli.s
( 153) 0323 AB8300      ; 	sta.w 0,I++
( 154)                  ; ;   28:             factor := factor + prime;
( 155) 0326 ABAD170D    ; 	lda.w factor_007
( 156) 032A AB48        ; 	pha.w
( 157) 032C ABAD150D    ; 	lda.w prime_006
( 158) 0330 18          ; 	clc
( 159) 0331 CB7501      ; 	adc.w 1,S
( 160) 0334 C202        ; 	adj #2
( 161) 0336 AB8D170D    ; 	sta.w factor_007
( 162)                  ; ;   29:         END
( 163)                  ; ;   30:     UNTIL prime > limit;
( 164) 033A 4CE802      ; 	jmp L_016
( 165)                  ; L_018
( 166) 033D ABAD150D    ; 	lda.w prime_006
( 167) 0341 AB48        ; 	pha.w
( 168) 0343 ABAD130D    ; 	lda.w limit_005
( 169) 0347 CB4401      ; 	xma.w 1,S
( 170) 034A CBD501      ; 	cmp.w 1,S
( 171) 034D C202        ; 	adj #2
( 172) 034F 08          ; 	php
( 173) 0350 A901        ; 	lda #1
( 174) 0352 28          ; 	plp
( 175) 0353 AB1002      ; 	bgt L_020
( 176) 0356 A900        ; 	lda #0
( 177)                  ; L_020
( 178) 0358 ABC90100    ; 	cmp.w #1
( 179) 035C F003        ; 	beq L_012
( 180) 035E 4C8B02      ; 	jmp L_011
( 181)                  ; L_012
( 182)                  ; ;   31: 
( 183)                  ; ;   32:     writeln('Sieve of Eratosthenes');
( 184) 0361 ABE22905    ; 	psh.w #S_021
( 185) 0365 ABE20000    ; 	psh.w #0
( 186) 0369 ABE21500    ; 	psh.w #21
( 187) 036D 209604      ; 	jsr _swrite
( 188) 0370 C206        ; 	adj #6
( 189) 0372 209004      ; 	jsr _writeln
( 190)                  ; ;   33:     writeln;
( 191) 0375 209004      ; 	jsr _writeln
( 192)                  ; ;   34: 
( 193)                  ; ;   35:     i := 1;
( 194) 0378 A901        ; 	lda #1
( 195) 037A AB8D0F0D    ; 	sta.w i_003
( 196)                  ; ;   36:     REPEAT
( 197)                  ; L_022
( 198)                  ; ;   37:         FOR j := 0 TO 19 DO BEGIN
( 199) 037E A900        ; 	lda #0
( 200) 0380 AB8D110D    ; 	sta.w j_004
( 201)                  ; L_024
( 202) 0384 A913        ; 	lda #19
( 203) 0386 ABCD110D    ; 	cmp.w j_004
( 204) 038A AB5003      ; 	bge L_025
( 205) 038D 4CEF03      ; 	jmp L_026
( 206)                  ; L_025
( 207)                  ; ;   38:             prime := i + j;
( 208) 0390 ABAD0F0D    ; 	lda.w i_003
( 209) 0394 AB48        ; 	pha.w
( 210) 0396 ABAD110D    ; 	lda.w j_004
( 211) 039A 18          ; 	clc
( 212) 039B CB7501      ; 	adc.w 1,S
( 213) 039E C202        ; 	adj #2
( 214) 03A0 AB8D150D    ; 	sta.w prime_006
( 215)                  ; ;   39:             IF sieve[prime] THEN
( 216) 03A4 ABE23F05    ; 	psh.w #sieve_002
( 217) 03A8 ABAD150D    ; 	lda.w prime_006
( 218) 03AC AB3A        ; 	dec.w a
( 219) 03AE AB0A        ; 	asl.w a
( 220) 03B0 18          ; 	clc
( 221) 03B1 CB7501      ; 	adc.w 1,S
( 222) 03B4 CB9501      ; 	sta.w 1,S
( 223) 03B7 8B6B        ; 	pli.s
( 224) 03B9 ABA300      ; 	lda.w 0,I++
( 225) 03BC ABC90100    ; 	cmp.w #1
( 226) 03C0 F003        ; 	beq L_027
( 227) 03C2 4CD703      ; 	jmp L_028
( 228)                  ; L_027
( 229)                  ; ;   40:                 write(prime:3)
( 230) 03C5 ABAD150D    ; 	lda.w prime_006
( 231) 03C9 AB48        ; 	pha.w
( 232) 03CB ABE20300    ; 	psh.w #3
( 233)                  ; 	pha.w
( 234) 03CF 20A804      ; 	jsr _iwrite
( 235) 03D2 C204        ; 	adj #4
( 236)                  ; ;   41:             ELSE
( 237) 03D4 4CE803      ; 	jmp L_029
( 238)                  ; L_028
( 239)                  ; ;   42:                 write('   ');
( 240) 03D7 ABE22605    ; 	psh.w #S_030
( 241) 03DB ABE20000    ; 	psh.w #0
( 242) 03DF ABE20300    ; 	psh.w #3
( 243) 03E3 209604      ; 	jsr _swrite
( 244) 03E6 C206        ; 	adj #6
( 245)                  ; L_029
( 246)                  ; ;   43:         END;
( 247) 03E8 ABEE110D    ; 	inc.w j_004
( 248) 03EC 4C8403      ; 	jmp L_024
( 249)                  ; L_026
( 250) 03EF ABCE110D    ; 	dec.w j_004
( 251)                  ; ;   44:         writeln;
( 252) 03F3 209004      ; 	jsr _writeln
( 253)                  ; ;   45:         i := i + 20
( 254) 03F6 ABAD0F0D    ; 	lda.w i_003
( 255) 03FA AB48        ; 	pha.w
( 256) 03FC A914        ; 	lda #20
( 257)                  ; ;   46:     UNTIL i > max
( 258) 03FE 18          ; 	clc
( 259) 03FF CB7501      ; 	adc.w 1,S
( 260) 0402 C202        ; 	adj #2
( 261) 0404 AB8D0F0D    ; 	sta.w i_003
( 262) 0408 ABAD0F0D    ; 	lda.w i_003
( 263) 040C AB48        ; 	pha.w
( 264)                  ; ;   47: END.
( 265) 040E ABA9E803    ; 	lda.w #1000
( 266) 0412 CB4401      ; 	xma.w 1,S
( 267) 0415 CBD501      ; 	cmp.w 1,S
( 268) 0418 C202        ; 	adj #2
( 269) 041A 08          ; 	php
( 270) 041B A901        ; 	lda #1
( 271) 041D 28          ; 	plp
( 272) 041E AB1002      ; 	bgt L_031
( 273) 0421 A900        ; 	lda #0
( 274)                  ; L_031
( 275) 0423 ABC90100    ; 	cmp.w #1
( 276) 0427 F003        ; 	beq L_023
( 277) 0429 4C7E03      ; 	jmp L_022
( 278)                  ; L_023
( 279) 042C ABFA        ; 	plx.w
( 280) 042E 60          ; 	rts
( 281)                  ; 	.end _pc65_main
( 282)                  ; ;
( 283)                  ; ;   unsigned division 16 x 16
( 284)                  ; ;
( 285)                  ;             .cod
( 286)                  ; ;
( 287)                  ; _Q          .equ    5
( 288)                  ; _D          .equ    3
( 289)                  ; ;
( 290)                  ; _idiv       .proc
( 291) 042F A900        ;             lda #0
( 292) 0431 0B          ;             dup a
( 293) 0432 CBB505      ;             lda.w _Q,S
( 294) 0435 A010        ;             ldy #16
( 295)                  ; ;
( 296)                  ; _idiv_Lp    
( 297) 0437 18          ;             clc
( 298) 0438 AB0A        ;             asl.w a
( 299) 043A 1B          ;             swp a
( 300) 043B AB2A        ;             rol.w a
( 301)                  ; ;
( 302) 043D B006        ;             bcs _idiv_Plus
( 303)                  ; ;
( 304)                  ; _idiv_Minus
( 305) 043F 38          ;             sec
( 306) 0440 CBF503      ;             sbc.w _D,S
( 307)                  ; ;
( 308) 0443 8004        ;             bra _idiv_Next
( 309)                  ; ;
( 310)                  ; _idiv_Plus
( 311) 0445 18          ;             clc
( 312) 0446 CB7503      ;             adc.w _D,S
( 313)                  ; ;
( 314)                  ; _idiv_Next    
( 315) 0449 1B          ;             swp a
( 316) 044A 3002        ;             bmi _idiv_Dec
( 317) 044C AB1A        ;             inc.w a
( 318)                  ; ;
( 319)                  ; _idiv_Dec
( 320) 044E 88          ;             dey
( 321) 044F D0E6        ;             bne _idiv_Lp
( 322)                  ; ;
( 323)                  ; _idiv_Exit
( 324) 0451 1B          ;             swp a
( 325) 0452 AB090000    ;             ora.w #0
( 326) 0456 1004        ;             bpl _idiv_Finish
( 327) 0458 18          ;             clc
( 328) 0459 CB7503      ;             adc.w 3,S
( 329)                  ; _idiv_Finish
( 330) 045C 1B          ;             swp a
( 331)                  ; ;
( 332) 045D 60          ;             rts
( 333)                  ; ;
( 334)                  ;             .endp _idiv
( 335)                  ; ;
( 336)                  ; ; signed multiplication: 16 x 16 => 32
( 337)                  ; ;
( 338)                  ;             .cod
( 339)                  ; ;
( 340)                  ; _M          .equ    5
( 341)                  ; _R          .equ    3
( 342)                  ; ;
( 343)                  ; _imul       .proc
( 344) 045E A010        ;             ldy #16
( 345) 0460 A900        ;             lda #0
( 346) 0462 0B          ;             dup a
( 347) 0463 0B          ;             dup a
( 348) 0464 CBB503      ;             lda.w _R,S
( 349) 0467 9B2B        ;             rev
( 350) 0469 AB090000    ;             ora.w #0
( 351) 046D 18          ;             clc
( 352) 046E 2B          ;             rot a
( 353)                  ; ;
( 354) 046F 8003        ;             bra _imul_TstB
( 355)                  ; ;
( 356)                  ; _imul_Lp
( 357) 0471 AB0A        ;             asl.w a
( 358) 0473 2B          ;             rot a
( 359)                  ; _imul_TstB
( 360) 0474 9008        ;             bcc _imul_SubShft
( 361)                  ; ;
( 362)                  ; _imul_AddShft
( 363) 0476 300C        ;             bmi _imul_ShftP
( 364)                  ; _imul_AddM
( 365) 0478 18          ;             clc
( 366) 0479 CB7505      ;             adc.w _M,S
( 367) 047C 8006        ;             bra _imul_ShftP
( 368)                  ; ;
( 369)                  ; _imul_SubShft
( 370) 047E 1004        ;             bpl _imul_ShftP
( 371)                  ; _imul_SubM
( 372) 0480 38          ;             sec
( 373) 0481 CBF505      ;             sbc.w _M,S
( 374)                  ; ;
( 375)                  ; _imul_ShftP
( 376) 0484 BB4A        ;             asr.w a
( 377) 0486 2B          ;             rot a
( 378) 0487 AB6A        ;             ror.w a
( 379) 0489 2B          ;             rot a
( 380)                  ; ;
( 381)                  ; _imul_Dec
( 382) 048A 88          ;             dey
( 383) 048B D0E4        ;             bne _imul_Lp
( 384)                  ; ;
( 385)                  ; _imul_Exit
( 386) 048D 2B          ;             rot a
( 387) 048E 1B          ;             swp a
( 388)                  ; ;
( 389) 048F 60          ;             rts
( 390)                  ; ;
( 391)                  ;             .endp _imul
( 392)                  ; 
( 393)                  ; ;
( 394)                  ; ; put <newLine> to output
( 395)                  ; ;
( 396)                  ;             .cod
( 397)                  ; ;
( 398)                  ; _newLine    .equ    0x0A
( 399)                  ; _putChar    .equ    0xF001
( 400)                  ; ;
( 401)                  ; _writeln    .proc
( 402) 0490 A90A        ;             lda #_newLine
( 403) 0492 8D01F0      ;             sta _putChar
( 404)                  ; ;
( 405) 0495 60          ;             rts
( 406)                  ; ;
( 407)                  ;             .endp _writeln
( 408)                  ; ;
( 409)                  ; ; put string to output
( 410)                  ; ;
( 411)                  ;             .cod
( 412)                  ; ;
( 413)                  ; _sPtrOff    .equ    7
( 414)                  ; _sLenOff    .equ    3
( 415)                  ; ;
( 416)                  ; _swrite     .proc
( 417) 0496 CBB403      ;             ldy.w _sLenOff,S
( 418) 0499 CBB507      ;             lda.w _sPtrOff,S
( 419) 049C 9B0B        ;             tai
( 420)                  ; ;
( 421)                  ; _swrite_Lp
( 422) 049E A300        ;             lda 0,I++
( 423) 04A0 8D01F0      ;             sta _putChar
( 424)                  ; ;
( 425) 04A3 AB88        ;             dey.w
( 426) 04A5 D0F7        ;             bne _swrite_Lp
( 427)                  ; ;
( 428) 04A7 60          ;             rts
( 429)                  ; ;
( 430)                  ;             .endp _swrite
( 431)                  ; ;
( 432)                  ; ; put integer to output
( 433)                  ; ;
( 434)                  ;             .cod
( 435)                  ; ;
( 436)                  ; _iValOff    .equ    7
( 437)                  ; _fLenOff    .equ    5
( 438)                  ; _iCntOff    .equ    -1
( 439)                  ; ;
( 440)                  ; _iwrite     .proc
( 441) 04A8 ABDA        ;             phx.w
( 442) 04AA ABBA        ;             tsx.w
( 443)                  ; ;
( 444) 04AC B505        ;             lda _fLenOff,X
( 445) 04AE C905        ;             cmp #5
( 446) 04B0 AB3002      ;             ble _iwrite_SetCnt
( 447) 04B3 A905        ;             lda #5
( 448)                  ; ;
( 449)                  ; _iwrite_SetCnt
( 450) 04B5 AB48        ;             pha.w
( 451) 04B7 ABB507      ;             lda.w _iValOff,X
( 452)                  ; ;
( 453)                  ; _iwrite_Lp
( 454) 04BA AB48        ;             pha.w
( 455) 04BC ABE20A00    ;             psh.w #10
( 456) 04C0 9B5C6BFF    ;             csr _idiv
( 457) 04C4 C204        ;             adj #4
( 458) 04C6 1B          ;             swp a
( 459)                  ; ;
( 460) 04C7 18          ;             clc
( 461) 04C8 6930        ;             adc #48
( 462) 04CA 48          ;             pha
( 463)                  ; ;
( 464) 04CB 2B          ;             rot a
( 465)                  ; ;
( 466) 04CC ABD6FF      ;             dec.w _iCntOff,X
( 467) 04CF D0E9        ;             bne _iwrite_Lp
( 468)                  ; ;-------------------------------------------------------------------------------
( 469) 04D1 0B          ;             dup a
( 470)                  ; ;-------------------------------------------------------------------------------
( 471)                  ; _iwrite_Fill
( 472) 04D2 B505        ;             lda _fLenOff,X
( 473) 04D4 C905        ;             cmp #5
( 474) 04D6 AB300A      ;             ble _iwrite_GenPtr
( 475) 04D9 38          ;             sec
( 476) 04DA E905        ;             sbc #5
( 477) 04DC A8          ;             tay
( 478) 04DD A930        ;             lda #48
( 479)                  ; ;
( 480)                  ; _iwrite_Fill_Lp                     ; increase string on stack with fill data
( 481) 04DF 48          ;             pha
( 482) 04E0 88          ;             dey
( 483) 04E1 D0FC        ;             bne _iwrite_Fill_Lp
( 484)                  ; ;-------------------------------------------------------------------------------
( 485)                  ; _iwrite_GenPtr
( 486) 04E3 CB8A        ;             tsa.w
( 487) 04E5 AB1A        ;             inc.w a
( 488) 04E7 AB48        ;             pha.w
( 489)                  ; ;-------------------------------------------------------------------------------
( 490) 04E9 2B          ;             rot a
( 491)                  ; ;-------------------------------------------------------------------------------
( 492) 04EA ABC90000    ;             cmp.w #0
( 493) 04EE F00F        ;             beq _iwrite_Sup0
( 494) 04F0 A000        ;             ldy #0
( 495)                  ; _iwrite_ErrLp
( 496) 04F2 A92A        ;             lda #0x2A
( 497) 04F4 8B9101      ;             sta (1,S),Y
( 498) 04F7 C8          ;             iny
( 499) 04F8 FBD505      ;             cmp.y _fLenOff,X
( 500) 04FB D0F5        ;             bne _iwrite_ErrLp
( 501) 04FD 8014        ;             bra _iwrite_Exit
( 502)                  ; ;-------------------------------------------------------------------------------
( 503)                  ; _iwrite_Sup0
( 504) 04FF A000        ;             ldy #0
( 505)                  ; _iwrite_Sup0_Lp
( 506) 0501 8BB101      ;             lda (1,S),Y
( 507) 0504 C930        ;             cmp #48
( 508) 0506 D00B        ;             bne _iwrite_Exit
( 509) 0508 A920        ;             lda #32
( 510) 050A 8B9101      ;             sta (1,S),Y
( 511) 050D C8          ;             iny
( 512) 050E FBD505      ;             cmp.y _fLenOff,X
( 513) 0511 D0EE        ;             bne _iwrite_Sup0_Lp
( 514)                  ; ;-------------------------------------------------------------------------------
( 515)                  ; _iwrite_Exit
( 516) 0513 ABE20000    ;             psh.w #0
( 517) 0517 B505        ;             lda _fLenOff,X
( 518) 0519 AB48        ;             pha.w
( 519) 051B 9B5C77FF    ;             csr _swrite
( 520) 051F C206        ;             adj #6
( 521)                  ; ;
( 522) 0521 AB9A        ;             txs.w
( 523) 0523 ABFA        ;             plx.w
( 524) 0525 60          ;             rts
( 525)                  ; ;
( 526)                  ;             .endp _iwrite
( 527)                  ; 
( 528)                  ; 	.dat
( 529)                  ; 
( 530) 0526 202020      ; S_030 .str "   "
( 531) 0529 53696576    ; S_021 .str "Sieve of Eratosthenes"
       052D 65206F6620457261746F737468656E6573
( 532) 053E 00          ; _bss_start .byt 1
( 533) 053F 00000000    ; sieve_002 .byt 2000
       0543 0000000000000000000000000000000000000000000000000000000000000000
       0563 0000000000000000000000000000000000000000000000000000000000000000
       0583 0000000000000000000000000000000000000000000000000000000000000000
       05A3 0000000000000000000000000000000000000000000000000000000000000000
       05C3 0000000000000000000000000000000000000000000000000000000000000000
       05E3 0000000000000000000000000000000000000000000000000000000000000000
       0603 0000000000000000000000000000000000000000000000000000000000000000
       0623 0000000000000000000000000000000000000000000000000000000000000000
       0643 0000000000000000000000000000000000000000000000000000000000000000
       0663 0000000000000000000000000000000000000000000000000000000000000000
       0683 0000000000000000000000000000000000000000000000000000000000000000
       06A3 0000000000000000000000000000000000000000000000000000000000000000
       06C3 0000000000000000000000000000000000000000000000000000000000000000
       06E3 0000000000000000000000000000000000000000000000000000000000000000
       0703 0000000000000000000000000000000000000000000000000000000000000000
       0723 0000000000000000000000000000000000000000000000000000000000000000
       0743 0000000000000000000000000000000000000000000000000000000000000000
       0763 0000000000000000000000000000000000000000000000000000000000000000
       0783 0000000000000000000000000000000000000000000000000000000000000000
       07A3 0000000000000000000000000000000000000000000000000000000000000000
       07C3 0000000000000000000000000000000000000000000000000000000000000000
       07E3 0000000000000000000000000000000000000000000000000000000000000000
       0803 0000000000000000000000000000000000000000000000000000000000000000
       0823 0000000000000000000000000000000000000000000000000000000000000000
       0843 0000000000000000000000000000000000000000000000000000000000000000
       0863 0000000000000000000000000000000000000000000000000000000000000000
       0883 0000000000000000000000000000000000000000000000000000000000000000
       08A3 0000000000000000000000000000000000000000000000000000000000000000
       08C3 0000000000000000000000000000000000000000000000000000000000000000
       08E3 0000000000000000000000000000000000000000000000000000000000000000
       0903 0000000000000000000000000000000000000000000000000000000000000000
       0923 0000000000000000000000000000000000000000000000000000000000000000
       0943 0000000000000000000000000000000000000000000000000000000000000000
       0963 0000000000000000000000000000000000000000000000000000000000000000
       0983 0000000000000000000000000000000000000000000000000000000000000000
       09A3 0000000000000000000000000000000000000000000000000000000000000000
       09C3 0000000000000000000000000000000000000000000000000000000000000000
       09E3 0000000000000000000000000000000000000000000000000000000000000000
       0A03 0000000000000000000000000000000000000000000000000000000000000000
       0A23 0000000000000000000000000000000000000000000000000000000000000000
       0A43 0000000000000000000000000000000000000000000000000000000000000000
       0A63 0000000000000000000000000000000000000000000000000000000000000000
       0A83 0000000000000000000000000000000000000000000000000000000000000000
       0AA3 0000000000000000000000000000000000000000000000000000000000000000
       0AC3 0000000000000000000000000000000000000000000000000000000000000000
       0AE3 0000000000000000000000000000000000000000000000000000000000000000
       0B03 0000000000000000000000000000000000000000000000000000000000000000
       0B23 0000000000000000000000000000000000000000000000000000000000000000
       0B43 0000000000000000000000000000000000000000000000000000000000000000
       0B63 0000000000000000000000000000000000000000000000000000000000000000
       0B83 0000000000000000000000000000000000000000000000000000000000000000
       0BA3 0000000000000000000000000000000000000000000000000000000000000000
       0BC3 0000000000000000000000000000000000000000000000000000000000000000
       0BE3 0000000000000000000000000000000000000000000000000000000000000000
       0C03 0000000000000000000000000000000000000000000000000000000000000000
       0C23 0000000000000000000000000000000000000000000000000000000000000000
       0C43 0000000000000000000000000000000000000000000000000000000000000000
       0C63 0000000000000000000000000000000000000000000000000000000000000000
       0C83 0000000000000000000000000000000000000000000000000000000000000000
       0CA3 0000000000000000000000000000000000000000000000000000000000000000
       0CC3 0000000000000000000000000000000000000000000000000000000000000000
       0CE3 0000000000000000000000000000000000000000000000000000000000000000
       0D03 000000000000000000000000
( 534) 0D0F 0000        ; i_003 .wrd 1
( 535) 0D11 0000        ; j_004 .wrd 1
( 536) 0D13 0000        ; limit_005 .wrd 1
( 537) 0D15 0000        ; prime_006 .wrd 1
( 538) 0D17 0000        ; factor_007 .wrd 1
( 539) 0D19 00          ; _bss_end .byt 1
( 540) 0D1A 00000000    ; _stk .byt 1023
       0D1E 0000000000000000000000000000000000000000000000000000000000000000
       0D3E 0000000000000000000000000000000000000000000000000000000000000000
       0D5E 0000000000000000000000000000000000000000000000000000000000000000
       0D7E 0000000000000000000000000000000000000000000000000000000000000000
       0D9E 0000000000000000000000000000000000000000000000000000000000000000
       0DBE 0000000000000000000000000000000000000000000000000000000000000000
       0DDE 0000000000000000000000000000000000000000000000000000000000000000
       0DFE 0000000000000000000000000000000000000000000000000000000000000000
       0E1E 0000000000000000000000000000000000000000000000000000000000000000
       0E3E 0000000000000000000000000000000000000000000000000000000000000000
       0E5E 0000000000000000000000000000000000000000000000000000000000000000
       0E7E 0000000000000000000000000000000000000000000000000000000000000000
       0E9E 0000000000000000000000000000000000000000000000000000000000000000
       0EBE 0000000000000000000000000000000000000000000000000000000000000000
       0EDE 0000000000000000000000000000000000000000000000000000000000000000
       0EFE 0000000000000000000000000000000000000000000000000000000000000000
       0F1E 0000000000000000000000000000000000000000000000000000000000000000
       0F3E 0000000000000000000000000000000000000000000000000000000000000000
       0F5E 0000000000000000000000000000000000000000000000000000000000000000
       0F7E 0000000000000000000000000000000000000000000000000000000000000000
       0F9E 0000000000000000000000000000000000000000000000000000000000000000
       0FBE 0000000000000000000000000000000000000000000000000000000000000000
       0FDE 0000000000000000000000000000000000000000000000000000000000000000
       0FFE 0000000000000000000000000000000000000000000000000000000000000000
       101E 0000000000000000000000000000000000000000000000000000000000000000
       103E 0000000000000000000000000000000000000000000000000000000000000000
       105E 0000000000000000000000000000000000000000000000000000000000000000
       107E 0000000000000000000000000000000000000000000000000000000000000000
       109E 0000000000000000000000000000000000000000000000000000000000000000
       10BE 0000000000000000000000000000000000000000000000000000000000000000
       10DE 0000000000000000000000000000000000000000000000000000000000000000
       10FE 000000000000000000000000000000000000000000000000000000
( 541) 1119 00          ; _stk_top .byt 1
( 542)                  ; 
( 543)                  ; 	.end
