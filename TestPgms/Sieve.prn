(   1)                  ; ;    1: PROGRAM eratosthenes(output);
(   2)                  ; 	.stk 1024
(   3)                  ; 	.cod 512
(   4)                  ; STATIC_LINK .equ +5
(   5)                  ; RETURN_VALUE .equ -3
(   6)                  ; HIGH_RETURN_VALUE .equ -1
(   7)                  ; _start
(   8) 0200 ABBA        ; 	tsx.w		; Preserve original stack pointer
(   9) 0202 CBA25B04    ; 	lds.w #_stk_top	; Initialize program stack pointer
(  10) 0206 9C4D04      ; 	stz _bss_start
(  11) 0209 ABA24D04    ; 	ldx.w #_bss_start
(  12) 020D ABA04E04    ; 	ldy.w #_bss_start+1
(  13) 0211 ABA95B04    ; 	lda.w #_stk_top
(  14) 0215 38          ; 	sec
(  15) 0216 ABE94D04    ; 	sbc.w #_bss_start
(  16) 021A 540F        ; 	mov #15
(  17) 021C 4C1F02      ; 	jmp _pc65_main
(  18)                  ; ;    2: 
(  19)                  ; ;    3: CONST
(  20)                  ; ;    4:     max = 1000;
(  21)                  ; ;    5: 
(  22)                  ; ;    6: VAR
(  23)                  ; ;    7:     sieve : ARRAY [1..max] OF BOOLEAN;
(  24)                  ; ;    8:     i, j, limit, prime, factor : INTEGER;
(  25)                  ; ;    9: 
(  26)                  ; ;   10: BEGIN
(  27)                  ; _pc65_main .sub
(  28) 021F ABDA        ; 	phx.w
(  29) 0221 ABBA        ; 	tsx.w
(  30)                  ; ;   11:     limit := max DIV 2;
(  31) 0223 ABA9E803    ; 	lda.w #1000
(  32) 0227 AB48        ; 	pha.w
(  33) 0229 A902        ; 	lda #2
(  34) 022B AB48        ; 	pha.w
(  35) 022D 20FFFF      ; 	jsr _idiv
(  36) 0230 C204        ; 	adj #4
(  37) 0232 AB8D5304    ; 	sta.w limit_005
(  38)                  ; ;   12:     sieve[1] := FALSE;
(  39) 0236 ABE24E04    ; 	psh.w #sieve_002
(  40) 023A A901        ; 	lda #1
(  41) 023C AB3A        ; 	dec.w a
(  42) 023E AB0A        ; 	asl.w a
(  43) 0240 18          ; 	clc
(  44) 0241 CB7501      ; 	adc.w 1,S
(  45) 0244 CB9501      ; 	sta.w 1,S
(  46) 0247 A900        ; 	lda #0
(  47) 0249 8B6B        ; 	pli.s
(  48) 024B AB8300      ; 	sta.w 0,I++
(  49)                  ; ;   13: 
(  50)                  ; ;   14:     FOR i := 2 TO max DO
(  51) 024E A902        ; 	lda #2
(  52) 0250 AB8D4F04    ; 	sta.w i_003
(  53)                  ; L_008
(  54) 0254 ABA9E803    ; 	lda.w #1000
(  55) 0258 ABCD4F04    ; 	cmp.w i_003
(  56) 025C AB5003      ; 	bge L_009
(  57) 025F 4C8302      ; 	jmp L_010
(  58)                  ; L_009
(  59)                  ; ;   15:         sieve[i] := TRUE;
(  60) 0262 ABE24E04    ; 	psh.w #sieve_002
(  61) 0266 ABAD4F04    ; 	lda.w i_003
(  62) 026A AB3A        ; 	dec.w a
(  63) 026C AB0A        ; 	asl.w a
(  64) 026E 18          ; 	clc
(  65) 026F CB7501      ; 	adc.w 1,S
(  66) 0272 CB9501      ; 	sta.w 1,S
(  67) 0275 A901        ; 	lda #1
(  68) 0277 8B6B        ; 	pli.s
(  69) 0279 AB8300      ; 	sta.w 0,I++
(  70) 027C ABEE4F04    ; 	inc.w i_003
(  71) 0280 4C5402      ; 	jmp L_008
(  72)                  ; L_010
(  73) 0283 ABCE4F04    ; 	dec.w i_003
(  74)                  ; ;   16: 
(  75)                  ; ;   17:     prime := 1;
(  76) 0287 A901        ; 	lda #1
(  77) 0289 AB8D5504    ; 	sta.w prime_006
(  78)                  ; ;   18: 
(  79)                  ; ;   19:     REPEAT
(  80)                  ; L_011
(  81)                  ; ;   20:         prime := prime + 1;
(  82) 028D ABAD5504    ; 	lda.w prime_006
(  83) 0291 AB48        ; 	pha.w
(  84) 0293 A901        ; 	lda #1
(  85) 0295 18          ; 	clc
(  86) 0296 CB7501      ; 	adc.w 1,S
(  87) 0299 C202        ; 	adj #2
(  88) 029B AB8D5504    ; 	sta.w prime_006
(  89)                  ; ;   21:         WHILE NOT sieve[prime] DO
(  90)                  ; L_013
(  91) 029F ABE24E04    ; 	psh.w #sieve_002
(  92) 02A3 ABAD5504    ; 	lda.w prime_006
(  93) 02A7 AB3A        ; 	dec.w a
(  94) 02A9 AB0A        ; 	asl.w a
(  95) 02AB 18          ; 	clc
(  96) 02AC CB7501      ; 	adc.w 1,S
(  97) 02AF CB9501      ; 	sta.w 1,S
(  98) 02B2 8B6B        ; 	pli.s
(  99) 02B4 ABA300      ; 	lda.w 0,I++
( 100) 02B7 4901        ; 	eor #1
( 101) 02B9 ABC90100    ; 	cmp.w #1
( 102) 02BD F003        ; 	beq L_014
( 103) 02BF 4CD702      ; 	jmp L_015
( 104)                  ; L_014
( 105)                  ; ;   22:             prime := prime + 1;
( 106) 02C2 ABAD5504    ; 	lda.w prime_006
( 107) 02C6 AB48        ; 	pha.w
( 108) 02C8 A901        ; 	lda #1
( 109) 02CA 18          ; 	clc
( 110) 02CB CB7501      ; 	adc.w 1,S
( 111) 02CE C202        ; 	adj #2
( 112) 02D0 AB8D5504    ; 	sta.w prime_006
( 113) 02D4 4C9F02      ; 	jmp L_013
( 114)                  ; L_015
( 115)                  ; ;   23: 
( 116)                  ; ;   24:         factor := 2*prime;
( 117) 02D7 A902        ; 	lda #2
( 118) 02D9 AB48        ; 	pha.w
( 119) 02DB ABAD5504    ; 	lda.w prime_006
( 120) 02DF AB48        ; 	pha.w
( 121) 02E1 20FFFF      ; 	jsr _imul
( 122) 02E4 C204        ; 	adj #4
( 123) 02E6 AB8D5704    ; 	sta.w factor_007
( 124)                  ; ;   25: 
( 125)                  ; ;   26:         WHILE factor <= max DO BEGIN
( 126)                  ; L_016
( 127) 02EA ABAD5704    ; 	lda.w factor_007
( 128) 02EE AB48        ; 	pha.w
( 129) 02F0 ABA9E803    ; 	lda.w #1000
( 130) 02F4 CB4401      ; 	xma.w 1,S
( 131) 02F7 CBD501      ; 	cmp.w 1,S
( 132) 02FA C202        ; 	adj #2
( 133) 02FC 08          ; 	php
( 134) 02FD A901        ; 	lda #1
( 135) 02FF 28          ; 	plp
( 136) 0300 AB3002      ; 	ble L_019
( 137) 0303 A900        ; 	lda #0
( 138)                  ; L_019
( 139) 0305 ABC90100    ; 	cmp.w #1
( 140) 0309 F003        ; 	beq L_017
( 141) 030B 4C3F03      ; 	jmp L_018
( 142)                  ; L_017
( 143)                  ; ;   27:             sieve[factor] := FALSE;
( 144) 030E ABE24E04    ; 	psh.w #sieve_002
( 145) 0312 ABAD5704    ; 	lda.w factor_007
( 146) 0316 AB3A        ; 	dec.w a
( 147) 0318 AB0A        ; 	asl.w a
( 148) 031A 18          ; 	clc
( 149) 031B CB7501      ; 	adc.w 1,S
( 150) 031E CB9501      ; 	sta.w 1,S
( 151) 0321 A900        ; 	lda #0
( 152) 0323 8B6B        ; 	pli.s
( 153) 0325 AB8300      ; 	sta.w 0,I++
( 154)                  ; ;   28:             factor := factor + prime;
( 155) 0328 ABAD5704    ; 	lda.w factor_007
( 156) 032C AB48        ; 	pha.w
( 157) 032E ABAD5504    ; 	lda.w prime_006
( 158) 0332 18          ; 	clc
( 159) 0333 CB7501      ; 	adc.w 1,S
( 160) 0336 C202        ; 	adj #2
( 161) 0338 AB8D5704    ; 	sta.w factor_007
( 162)                  ; ;   29:         END
( 163)                  ; ;   30:     UNTIL prime > limit;
( 164) 033C 4CEA02      ; 	jmp L_016
( 165)                  ; L_018
( 166) 033F ABAD5504    ; 	lda.w prime_006
( 167) 0343 AB48        ; 	pha.w
( 168) 0345 ABAD5304    ; 	lda.w limit_005
( 169) 0349 CB4401      ; 	xma.w 1,S
( 170) 034C CBD501      ; 	cmp.w 1,S
( 171) 034F C202        ; 	adj #2
( 172) 0351 08          ; 	php
( 173) 0352 A901        ; 	lda #1
( 174) 0354 28          ; 	plp
( 175) 0355 AB1002      ; 	bgt L_020
( 176) 0358 A900        ; 	lda #0
( 177)                  ; L_020
( 178) 035A ABC90100    ; 	cmp.w #1
( 179) 035E F003        ; 	beq L_012
( 180) 0360 4C8D02      ; 	jmp L_011
( 181)                  ; L_012
( 182)                  ; ;   31: 
( 183)                  ; ;   32:     writeln('Sieve of Eratosthenes');
( 184) 0363 ABE23604    ; 	psh.w #S_021
( 185) 0367 ABE20000    ; 	psh.w #0
( 186) 036B ABE21500    ; 	psh.w #21
( 187) 036F 20FFFF      ; 	jsr _swrite
( 188) 0372 C206        ; 	adj #6
( 189) 0374 20FFFF      ; 	jsr _writeln
( 190)                  ; ;   33:     writeln;
( 191) 0377 20FFFF      ; 	jsr _writeln
( 192)                  ; ;   34: 
( 193)                  ; ;   35:     i := 1;
( 194) 037A A901        ; 	lda #1
( 195) 037C AB8D4F04    ; 	sta.w i_003
( 196)                  ; ;   36:     REPEAT
( 197)                  ; L_022
( 198)                  ; ;   37:         FOR j := 0 TO 19 DO BEGIN
( 199) 0380 A900        ; 	lda #0
( 200) 0382 AB8D5104    ; 	sta.w j_004
( 201)                  ; L_024
( 202) 0386 A913        ; 	lda #19
( 203) 0388 ABCD5104    ; 	cmp.w j_004
( 204) 038C AB5003      ; 	bge L_025
( 205) 038F 4CF103      ; 	jmp L_026
( 206)                  ; L_025
( 207)                  ; ;   38:             prime := i + j;
( 208) 0392 ABAD4F04    ; 	lda.w i_003
( 209) 0396 AB48        ; 	pha.w
( 210) 0398 ABAD5104    ; 	lda.w j_004
( 211) 039C 18          ; 	clc
( 212) 039D CB7501      ; 	adc.w 1,S
( 213) 03A0 C202        ; 	adj #2
( 214) 03A2 AB8D5504    ; 	sta.w prime_006
( 215)                  ; ;   39:             IF sieve[prime] THEN
( 216) 03A6 ABE24E04    ; 	psh.w #sieve_002
( 217) 03AA ABAD5504    ; 	lda.w prime_006
( 218) 03AE AB3A        ; 	dec.w a
( 219) 03B0 AB0A        ; 	asl.w a
( 220) 03B2 18          ; 	clc
( 221) 03B3 CB7501      ; 	adc.w 1,S
( 222) 03B6 CB9501      ; 	sta.w 1,S
( 223) 03B9 8B6B        ; 	pli.s
( 224) 03BB ABA300      ; 	lda.w 0,I++
( 225) 03BE ABC90100    ; 	cmp.w #1
( 226) 03C2 F003        ; 	beq L_027
( 227) 03C4 4CD903      ; 	jmp L_028
( 228)                  ; L_027
( 229)                  ; ;   40:                 write(prime:3)
( 230) 03C7 ABAD5504    ; 	lda.w prime_006
( 231) 03CB AB48        ; 	pha.w
( 232) 03CD A903        ; 	lda #3
( 233) 03CF AB48        ; 	pha.w
( 234) 03D1 20FFFF      ; 	jsr _iwrite
( 235) 03D4 C204        ; 	adj #4
( 236)                  ; ;   41:             ELSE
( 237) 03D6 4CEA03      ; 	jmp L_029
( 238)                  ; L_028
( 239)                  ; ;   42:                 write('   ');
( 240) 03D9 ABE23104    ; 	psh.w #S_030
( 241) 03DD ABE20000    ; 	psh.w #0
( 242) 03E1 ABE20300    ; 	psh.w #3
( 243) 03E5 20FFFF      ; 	jsr _swrite
( 244) 03E8 C206        ; 	adj #6
( 245)                  ; L_029
( 246)                  ; ;   43:         END;
( 247) 03EA ABEE5104    ; 	inc.w j_004
( 248) 03EE 4C8603      ; 	jmp L_024
( 249)                  ; L_026
( 250) 03F1 ABCE5104    ; 	dec.w j_004
( 251)                  ; ;   44:         writeln;
( 252) 03F5 20FFFF      ; 	jsr _writeln
( 253)                  ; ;   45:         i := i + 20
( 254) 03F8 ABAD4F04    ; 	lda.w i_003
( 255) 03FC AB48        ; 	pha.w
( 256) 03FE A914        ; 	lda #20
( 257)                  ; ;   46:     UNTIL i > max
( 258) 0400 18          ; 	clc
( 259) 0401 CB7501      ; 	adc.w 1,S
( 260) 0404 C202        ; 	adj #2
( 261) 0406 AB8D4F04    ; 	sta.w i_003
( 262) 040A ABAD4F04    ; 	lda.w i_003
( 263) 040E AB48        ; 	pha.w
( 264)                  ; ;   47: END.
( 265) 0410 ABA9E803    ; 	lda.w #1000
( 266) 0414 CB4401      ; 	xma.w 1,S
( 267) 0417 CBD501      ; 	cmp.w 1,S
( 268) 041A C202        ; 	adj #2
( 269) 041C 08          ; 	php
( 270) 041D A901        ; 	lda #1
( 271) 041F 28          ; 	plp
( 272) 0420 AB1002      ; 	bgt L_031
( 273) 0423 A900        ; 	lda #0
( 274)                  ; L_031
( 275) 0425 ABC90100    ; 	cmp.w #1
( 276) 0429 F003        ; 	beq L_023
( 277) 042B 4C8003      ; 	jmp L_022
( 278)                  ; L_023
( 279) 042E ABFA        ; 	plx.w
( 280) 0430 60          ; 	rts
	Missing conversion(s): 0x0431-0x044C
( 281)                  ; 	.end _pc65_main
( 282)                  ; 
( 283)                  ; 	.dat
( 284)                  ; 
( 285)                  ; S_030 .str "   "
( 286)                  ; S_021 .str "Sieve of Eratosthenes"
( 287) 044D 01          ; _bss_start .byt 1
( 288) 044E D0          ; sieve_002 .byt 2000
( 289) 044F 0100        ; i_003 .wrd 1
( 290) 0451 0100        ; j_004 .wrd 1
( 291) 0453 0100        ; limit_005 .wrd 1
( 292) 0455 0100        ; prime_006 .wrd 1
( 293) 0457 0100        ; factor_007 .wrd 1
( 294) 0459 01          ; _bss_end .byt 1
( 295) 045A FF          ; _stk .byt 1023
( 296) 045B 01          ; _stk_top .byt 1
( 296)                  ; _stk_top .byt 1
( 297)                  ; 
( 298)                  ; 	.end
