(   1)                  ; ;   M65C02A Character String Output Routine
(   2)                  ; ;       Implemented to support the drogon method where the desired output string
(   3)                  ; ;       is embedded in the instruction sequence following the jsr instruction.
(   4)                  ; ;       Thus, the address of the string is the return address on the stack + 1.
(   5)                  ; ;       The string is NULL terminated, so at the completion of the routine, the
(   6)                  ; ;       return address on the stack should be pointing to the NULL terminator.
(   7)                  ; ;
(   8)                  ; _putch  .equ    0xF001          ; py65 character output memory location
(   9)                  ; ;
(  10)                  ;         .cod 512
(  11)                  ; ;
(  12)                  ; test    .proc
(  13) 0200 AB6400   [5];         stz.w 0
(  14) 0203 8BA2FF   [3];         lds #511                ; initialize stack pointer
(  15) 0206 201702   [5];         jsr strout              ; output the embedded string to the console
(  16) 0209 48656C6C    ;         .db "Hello World",10,0
       020D 6F20576F726C640A00
(  17) 0216 00       [-];         brk
(  18)                  ;         .endp
(  19)                  ; ;
(  20)                  ; strout  .proc
(  21) 0217 A000     [2];         ldy #0                  ; load y as index to first byte of the string
(  22) 0219 ABC8     [2]; L000    iny.w                   ; increment TOS to point to next character
(  23) 021B 8BB101   [6];         lda (1,S),Y             ; load character pointed to by TOS
(  24) 021E F005     [2];         beq L001                ; if ch==0, end of string found, exit routine
(  25) 0220 8D01F0   [4];         sta _putch              ; write the character to the console
(  26) 0223 80F4     [2];         bra L000                ; loop until end of string found
(  27) 0225 AB98     [2]; L001    tya.w                   ; transfer Y to A and adjust the return address
(  28) 0227 18       [1];         clc
(  29) 0228 CB7501   [5];         adc.w 1,S               ; add return address to Y
(  30) 022B CB9501   [5];         sta.w 1,S               ; replace the return address with adjusted addr.
(  31) 022E 60       [3];         rts                     ; exit
(  32)                  ;         .endp
(  33)                  ; ;
(  34)                  ;         .end
(  35)                  ; 
