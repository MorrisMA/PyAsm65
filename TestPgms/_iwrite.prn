(   1)                  ; ; put integer to output
(   2)                  ;             .cod
(   3)                  ; ;
(   4)                  ; _iValOff    .equ    7
(   5)                  ; _fLenOff    .equ    5
(   6)                  ; _iCntOff    .equ    -1
(   7)                  ; ;
(   8)                  ; _iwrite     .proc
(   9) 0000 ABDA        ;             phx.w
(  10) 0002 ABBA        ;             tsx.w
(  11)                  ; ;
(  12) 0004 ABE20500    ;             psh.w #5
(  13) 0008 ABB507      ;             lda.w _iValOff,X
(  14)                  ; ; 
(  15)                  ; _iwrite_Lp
(  16) 000B AB48        ;             pha.w
(  17) 000D ABE20A00    ;             psh.w #10
(  18) 0011 9B5C2600    ;             csr _udiv
(  19) 0015 C204        ;             adj #4
(  20) 0017 1B          ;             swp a
(  21)                  ; ;
(  22) 0018 18          ;             clc
(  23) 0019 6930        ;             adc #48
(  24) 001B 48          ;             pha
(  25)                  ; ;
(  26) 001C 2B          ;             rot a
(  27)                  ; ;
(  28) 001D ABD6FF      ;             dec.w _iCntOff,X
(  29) 0020 D0E9        ;             bne _iwrite_Lp
(  30)                  ; ;
(  31) 0022 CB8A        ;             tsa.w
(  32) 0024 AB1A        ;             inc.w a
(  33)                  ; ;
(  34) 0026 AB48        ;             pha.w
(  35) 0028 ABE20000    ;             psh.w #0
(  36) 002C ABE20500    ;             psh.w #5
(  37) 0030 9B5C3600    ;             csr _swrite
(  38) 0034 C206        ;             adj #6
(  39)                  ; ;
(  40) 0036 AB9A        ;             txs.w
(  41) 0038 ABFA        ;             plx.w
(  42) 003A 60          ;             rts
(  43)                  ; ;
(  44)                  ;             .endp _iwrite
(  45)                  ; ;
(  46)                  ; ;   unsigned division 16 x 16
(  47)                  ; ;
(  48)                  ;             .cod
(  49)                  ; ;
(  50)                  ; _udiv       .proc
(  51) 003B A900        ;             lda #0
(  52) 003D 0B          ;             dup a
(  53) 003E CBB505      ;             lda.w 5,S
(  54) 0041 A010        ;             ldy #16
(  55)                  ; ;
(  56)                  ; _udiv_Lp    
(  57) 0043 18          ;             clc
(  58) 0044 AB0A        ;             asl.w a
(  59) 0046 1B          ;             swp a
(  60) 0047 AB2A        ;             rol.w a
(  61)                  ; ;
(  62) 0049 B006        ;             bcs _udiv_Plus
(  63)                  ; ;
(  64)                  ; _udiv_Minus
(  65) 004B 38          ;             sec
(  66) 004C CBF503      ;             sbc.w 3,S
(  67)                  ; ;
(  68) 004F 8004        ;             bra _udiv_Next
(  69)                  ; ;
(  70)                  ; _udiv_Plus
(  71) 0051 18          ;             clc
(  72) 0052 CB7503      ;             adc.w 3,S
(  73)                  ; ;
(  74)                  ; _udiv_Next    
(  75) 0055 1B          ;             swp a
(  76) 0056 3002        ;             bmi _udiv_Dec
(  77) 0058 AB1A        ;             inc.w a
(  78)                  ; ;
(  79)                  ; _udiv_Dec
(  80) 005A 88          ;             dey
(  81) 005B D0E6        ;             bne _udiv_Lp
(  82)                  ; ;
(  83)                  ; _udiv_Exit
(  84) 005D 1B          ;             swp a
(  85) 005E AB090000    ;             ora.w #0
(  86) 0062 1004        ;             bpl _udiv_Finish
(  87) 0064 18          ;             clc
(  88) 0065 CB7503      ;             adc.w 3,S
(  89)                  ; _udiv_Finish
(  90) 0068 1B          ;             swp a
(  91)                  ; ;
(  92) 0069 60          ;             rts
(  93)                  ; ;
(  94)                  ;             .endp _udiv
(  95)                  ; ;
(  96)                  ; ; put string to output
(  97)                  ; ;
(  98)                  ;             .cod
(  99)                  ; ;
( 100)                  ; _sPtrOff    .equ    7
( 101)                  ; _sLenOff    .equ    3
( 102)                  ; _putChar    .equ    0xF001
( 103)                  ; ;
( 104)                  ; _swrite     .proc
( 105) 006A CBB403      ;             ldy.w _sLenOff,S
( 106) 006D CBB507      ;             lda.w _sPtrOff,S
( 107) 0070 9B0B        ;             tai
( 108)                  ; ;
( 109)                  ; _swrite_Lp
( 110) 0072 A300        ;             lda 0,I++
( 111) 0074 8D01F0      ;             sta _putChar
( 112)                  ; ;
( 113) 0077 AB88        ;             dey.w
( 114) 0079 D0F7        ;             bne _swrite_Lp
( 115)                  ; ;
( 116) 007B 60          ;             rts
( 117)                  ; ;
( 118)                  ;             .endp _swrite
( 119)                  ; ;
( 120)                  ;             .end
