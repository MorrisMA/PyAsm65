(   1)                  ; ;
(   2)                  ; ;   (+LOOP) Test Program: X - RSP, S - PSP. Standard 6502 Stack Pointers
(   3)                  ; ;
(   4)                  ;         .cod    512
(   5)                  ; ;
(   6)                  ; PPLOOP  .proc
(   7)                  ; ;
(   8) 0200 AB68        ;         pla.w               ; Pull increment from PS
(   9)                  ; ;
(  10) 0202 18          ;         clc                 ; Prepare to add increment to loop index
(  11) 0203 100F        ;         bpl     PL1         ; if(increment > 0) test = final - index - 1
(  12)                  ; ;
(  13) 0205 AB7501      ;         adc.w   1,X         ; Add increment to loop index
(  14) 0208 AB9501      ;         sta.w   1,X
(  15)                  ; ;
(  16) 020B 18          ;         clc                 ; test = index - final - 1 (negative increment)
(  17) 020C ABB501      ;         lda.w   1,X
(  18) 020F ABF503      ;         sbc.w   3,X
(  19) 0212 800D        ;         bra     PL2         ; check if loop complete
(  20)                  ; ;
(  21) 0214 AB7501      ; PL1     adc.w   1,X         ; Add increment to loop index
(  22) 0217 AB9501      ;         sta.w   1,X
(  23)                  ; ;
(  24) 021A 18          ;         clc                 ; test = final - index - 1 (positive increment)
(  25) 021B ABB503      ;         lda.w   3,X
(  26) 021E ABF501      ;         sbc.w   1,X
(  27)                  ; ;
(  28) 0221 1006        ; PL2     bpl     BRANCH      ; Loop if Loop Cntr <= Loop Termination
(  29) 0223 8BC204      ;         adj.s   #4          ; Remove loop variables from RS
(  30)                  ; ;
(  31) 0226 5B          ;         ini                 ; Skip branch offset in thread
(  32) 0227 5B          ;         ini
(  33)                  ; ;
(  34) 0228 00          ;         brk                 ; NEXT
(  35)                  ; ;
(  36) 0229 AB0B        ; BRANCH  tia
(  37)                  ; ;
(  38) 022B 18          ;         clc
(  39) 022C AB6300      ;         adc.w   0,I++
(  40)                  ; ;
(  41) 022F 9B0B        ;         tai
(  42)                  ; ;
(  43) 0231 00          ;         brk                 ; NEXT
(  44)                  ; ;
(  45)                  ; Stack   .equ    36
(  46)                  ; NewLine .equ    10
(  47)                  ; CR      .equ    0x0D
(  48)                  ; LF      .equ    0x0A
(  49)                  ; ;
(  50) 0232 81818181    ; Byte    .byt    1 | 0x80 [8]
       0236 81818181
(  51) 023A 00000000    ;         .byt    [Stack]
       023E 0000000000000000000000000000000000000000000000000000000000000000
(  52) 025E FFFFFFFF    ;         .byt    -1 [8]
       0262 FFFFFFFF
(  53) 0266 07060504    ;         .byt    7, 6, 5, 4, 3, 2, 1, 0 | 0x80
       026A 03020180
(  54) 026E 00021402    ; Word    .wrd    PPLOOP, PL1, PL2, BRANCH
       0272 21022902
(  55) 0276 12345678    ; Long    .lng    0x78563412
(  56) 027A 87654321    ;         .lng    0x21436587, [1], -1[2]
       027E 00000000FFFFFFFFFFFFFFFF
(  57) 028A 0A414254    ;         .byt    10, "ABT, Inc.", NewLine, -1
       028E 2C20496E632E0AFF
(  58) 0296 0D0A        ; CRLF    .byt    CR, LF
(  59) 0298 00040104    ; ptrDat  .wrd    DatByt, DatByt+1
	Missing conversion(s): 0x029C-0x03FF
(  60)                  ;         .data   0x400
(  61) 0400 FF          ; DatByt  .byt    -1
(  62) 0401 4142542C    ; AbtAdrs .byt    "ABT, Inc.", CR, LF, "3325B Triana Blvd", CR, LF, "Huntsville, AL 35805", CR, LF
       0405 20496E632E0D0A333332354220547269616E6120426C76640D0A48756E747376
       0425 696C6C652C20414C2033353830350D0A
(  63)                  ;         .endp
(  64)                  ;         .end
