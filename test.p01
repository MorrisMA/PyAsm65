   4         .cod    512
   6 PPLOOP  .proc
   8         pla.w               ; Pull increment from PS
  10         clc                 ; Prepare to add increment to loop index
  11         bpl     PL1         ; if(increment > 0) test = final - index - 1
  13         adc.w   1,X         ; Add increment to loop index
  14         sta.w   1,X
  16         clc                 ; test = index - final - 1 (negative increment)
  17         lda.w   1,X
  18         sbc.w   3,X
  19         bra     PL2         ; check if loop complete
  21 PL1     adc.w   1,X         ; Add increment to loop index
  22         sta.w   1,X
  24         clc                 ; test = final - index - 1 (positive increment)
  25         lda.w   3,X
  26         sbc.w   1,X
  28 PL2     bpl     BRANCH      ; Loop if Loop Cntr <= Loop Termination
  29         adj.s   #4          ; Remove loop variables from RS
  31         ini                 ; Skip branch offset in thread
  32         ini
  34         brk                 ; NEXT
  36 BRANCH  tia
  38         clc
  39         adc.w   0,I++
  41         tai
  43         brk                 ; NEXT
  45 Stack   .equ    36
  46 NewLine .equ    10
  47 CR      .equ    0x0D
  48 LF      .equ    0x0A
  50 Byte    .byt    1 | 0x80 [8]
  51         .byt    [Stack]
  52         .byt    -1 [8]
  53         .byt    7, 6, 5, 4, 3, 2, 1, 0 | 0x80
  54 Word    .wrd    PPLOOP, PL1, PL2, BRANCH
  55 Long    .lng    0x78563412
  56         .lng    0x21436587, [1], -1[2]
  57         .byt    10, "ABT, Inc.", NewLine, -1
  58 CRLF    .byt    CR, LF
  59 ptrDat  .wrd    DatByt, DatByt+1
  60         .data   0x400
  61 DatByt  .byt    -1
  62 AbtAdrs .byt    "ABT, Inc.", CR, LF, "3325B Triana Blvd", CR, LF, "Huntsville, AL 35805", CR, LF
  63         .endp
  64         .end
